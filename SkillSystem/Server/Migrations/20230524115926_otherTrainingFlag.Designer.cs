// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SkillSystem.Server.Data;

#nullable disable

namespace SkillSystem.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230524115926_otherTrainingFlag")]
    partial class otherTrainingFlag
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SkillSystem.Shared.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.Property<int>("SkillTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SkillId");

                    b.HasIndex("SkillTypeId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "提高英语能力，通过英语四级",
                            Name = "英语四级培训课",
                            SkillId = 2,
                            SkillTypeId = 4
                        },
                        new
                        {
                            Id = 2,
                            Description = "提高计算机能力，通过计算机四级",
                            Name = "计算机四级培训课",
                            SkillId = 1,
                            SkillTypeId = 4
                        },
                        new
                        {
                            Id = 3,
                            Description = "提高Office能力，通过Office二级",
                            Name = "Office二级培训课",
                            SkillId = 4,
                            SkillTypeId = 2
                        });
                });

            modelBuilder.Entity("SkillSystem.Shared.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "负责人事管理相关工作",
                            Name = "人事管理部"
                        },
                        new
                        {
                            Id = 2,
                            Description = "负责产品开发相关工作",
                            Name = "开发部"
                        },
                        new
                        {
                            Id = 3,
                            Description = "负责人员联络工作",
                            Name = "联络部"
                        });
                });

            modelBuilder.Entity("SkillSystem.Shared.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Job");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentId = 1,
                            Description = "人事管理部主管",
                            Name = "部门主管"
                        },
                        new
                        {
                            Id = 2,
                            DepartmentId = 2,
                            Description = "开发部主管",
                            Name = "部门主管"
                        },
                        new
                        {
                            Id = 3,
                            DepartmentId = 3,
                            Description = "联络部主管",
                            Name = "部门主管"
                        },
                        new
                        {
                            Id = 4,
                            DepartmentId = 1,
                            Description = "人事管理部普通员工",
                            Name = "普通员工"
                        },
                        new
                        {
                            Id = 5,
                            DepartmentId = 1,
                            Description = "人事管理部普通员工",
                            Name = "普通员工"
                        },
                        new
                        {
                            Id = 6,
                            DepartmentId = 2,
                            Description = "开发部普通员工",
                            Name = "普通员工"
                        },
                        new
                        {
                            Id = 7,
                            DepartmentId = 2,
                            Description = "开发部普通员工",
                            Name = "普通员工"
                        },
                        new
                        {
                            Id = 8,
                            DepartmentId = 3,
                            Description = "联络部普通员工",
                            Name = "普通员工"
                        },
                        new
                        {
                            Id = 9,
                            DepartmentId = 3,
                            Description = "联络部普通员工",
                            Name = "普通员工"
                        });
                });

            modelBuilder.Entity("SkillSystem.Shared.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Skill");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "计算机操作能力",
                            Name = "计算机"
                        },
                        new
                        {
                            Id = 2,
                            Description = "英语交流能力",
                            Name = "英语"
                        },
                        new
                        {
                            Id = 3,
                            Description = "普通话交流能力",
                            Name = "普通话"
                        },
                        new
                        {
                            Id = 4,
                            Description = "办公软件能力",
                            Name = "Office"
                        });
                });

            modelBuilder.Entity("SkillSystem.Shared.SkillLicense", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.Property<DateTime>("GetTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("SkillTypeId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "SkillId");

                    b.HasIndex("SkillId");

                    b.HasIndex("SkillTypeId");

                    b.ToTable("SkillLicenses");

                    b.HasData(
                        new
                        {
                            UserId = 9,
                            SkillId = 2,
                            GetTime = new DateTime(2023, 5, 24, 19, 59, 26, 62, DateTimeKind.Local).AddTicks(6784),
                            SkillTypeId = 4
                        },
                        new
                        {
                            UserId = 9,
                            SkillId = 3,
                            GetTime = new DateTime(2023, 5, 24, 19, 59, 26, 62, DateTimeKind.Local).AddTicks(6793),
                            SkillTypeId = 4
                        });
                });

            modelBuilder.Entity("SkillSystem.Shared.SkillType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SkillTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "一级"
                        },
                        new
                        {
                            Id = 2,
                            Name = "二级"
                        },
                        new
                        {
                            Id = 3,
                            Name = "三级"
                        },
                        new
                        {
                            Id = 4,
                            Name = "四级"
                        });
                });

            modelBuilder.Entity("SkillSystem.Shared.SkillVariant", b =>
                {
                    b.Property<int>("SkillTypeId")
                        .HasColumnType("int");

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.Property<string>("Difficulty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SkillTypeId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("SkillVariants");

                    b.HasData(
                        new
                        {
                            SkillTypeId = 2,
                            SkillId = 1,
                            Difficulty = "简单"
                        },
                        new
                        {
                            SkillTypeId = 4,
                            SkillId = 2,
                            Difficulty = "中等"
                        },
                        new
                        {
                            SkillTypeId = 2,
                            SkillId = 3,
                            Difficulty = "简单"
                        },
                        new
                        {
                            SkillTypeId = 4,
                            SkillId = 3,
                            Difficulty = "简单"
                        },
                        new
                        {
                            SkillTypeId = 2,
                            SkillId = 4,
                            Difficulty = "简单"
                        },
                        new
                        {
                            SkillTypeId = 4,
                            SkillId = 4,
                            Difficulty = "中等"
                        });
                });

            modelBuilder.Entity("SkillSystem.Shared.Training", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Finished")
                        .HasColumnType("bit");

                    b.Property<bool>("Going")
                        .HasColumnType("bit");

                    b.Property<int>("MaxCapacity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegisterNumber")
                        .HasColumnType("int");

                    b.Property<bool>("Registering")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Training");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            Deleted = false,
                            Description = "第一年度春季英语培训",
                            EndTime = new DateTime(2023, 6, 30, 19, 59, 26, 62, DateTimeKind.Local).AddTicks(6887),
                            Finished = false,
                            Going = false,
                            MaxCapacity = 50,
                            Name = "第一年度春季英语培训",
                            RegisterNumber = 0,
                            Registering = false,
                            StartTime = new DateTime(2023, 5, 31, 19, 59, 26, 62, DateTimeKind.Local).AddTicks(6882),
                            Status = "未开始",
                            Type = "线下",
                            Visible = true
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 2,
                            Deleted = false,
                            Description = "第一年度秋季计算机培训",
                            EndTime = new DateTime(2023, 11, 24, 19, 59, 26, 62, DateTimeKind.Local).AddTicks(6892),
                            Finished = false,
                            Going = false,
                            MaxCapacity = 10,
                            Name = "第一年度秋季计算机培训",
                            RegisterNumber = 0,
                            Registering = false,
                            StartTime = new DateTime(2023, 8, 24, 19, 59, 26, 62, DateTimeKind.Local).AddTicks(6889),
                            Status = "未开始",
                            Type = "线上",
                            Visible = true
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 3,
                            Deleted = false,
                            Description = "第一年度夏季Office培训",
                            EndTime = new DateTime(2023, 10, 24, 19, 59, 26, 62, DateTimeKind.Local).AddTicks(6894),
                            Finished = false,
                            Going = false,
                            MaxCapacity = 30,
                            Name = "第一年度夏季Office培训",
                            RegisterNumber = 0,
                            Registering = false,
                            StartTime = new DateTime(2023, 7, 24, 19, 59, 26, 62, DateTimeKind.Local).AddTicks(6893),
                            Status = "未开始",
                            Type = "线上",
                            Visible = true
                        });
                });

            modelBuilder.Entity("SkillSystem.Shared.TrainingItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("RegisterTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Score")
                        .HasColumnType("decimal(5,1)");

                    b.Property<int>("TrainingId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<bool>("isFinished")
                        .HasColumnType("bit");

                    b.Property<bool>("isPass")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("TrainingId");

                    b.HasIndex("UserId");

                    b.ToTable("TrainingItems");
                });

            modelBuilder.Entity("SkillSystem.Shared.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2023, 5, 24, 19, 59, 26, 62, DateTimeKind.Local).AddTicks(7104),
                            Email = "duyou@example.com",
                            JobId = 1,
                            Name = "董磊",
                            PasswordHash = new byte[] { 60, 155, 98, 119, 197, 144, 7, 169, 238, 216, 83, 251, 133, 255, 163, 9, 13, 153, 52, 190, 117, 215, 9, 0, 52, 26, 209, 5, 70, 245, 151, 77, 250, 128, 64, 82, 73, 45, 241, 95, 35, 93, 255, 134, 171, 245, 23, 60, 111, 117, 65, 178, 146, 249, 85, 9, 6, 106, 6, 152, 37, 195, 89, 54 },
                            PasswordSalt = new byte[] { 214, 36, 167, 16, 202, 10, 182, 22, 107, 26, 196, 228, 104, 67, 175, 213, 211, 103, 69, 96, 118, 16, 17, 41, 123, 179, 144, 80, 235, 12, 199, 115, 80, 96, 227, 119, 221, 187, 206, 170, 210, 187, 195, 25, 224, 160, 93, 194, 6, 231, 221, 136, 45, 179, 119, 34, 11, 25, 199, 244, 101, 186, 158, 109, 166, 146, 197, 86, 186, 6, 120, 59, 103, 185, 68, 205, 204, 86, 198, 242, 215, 150, 138, 76, 224, 230, 170, 133, 82, 168, 143, 118, 48, 173, 72, 6, 137, 98, 187, 116, 62, 163, 123, 127, 176, 89, 217, 232, 129, 21, 121, 228, 218, 81, 188, 122, 76, 27, 46, 222, 213, 233, 25, 152, 53, 165, 18, 224 },
                            Phone = "12355556666",
                            Role = "staff",
                            Sex = "男"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2023, 5, 24, 19, 59, 26, 62, DateTimeKind.Local).AddTicks(7107),
                            Email = "duyou2@example.com",
                            JobId = 3,
                            Name = "庄娅",
                            PasswordHash = new byte[] { 60, 155, 98, 119, 197, 144, 7, 169, 238, 216, 83, 251, 133, 255, 163, 9, 13, 153, 52, 190, 117, 215, 9, 0, 52, 26, 209, 5, 70, 245, 151, 77, 250, 128, 64, 82, 73, 45, 241, 95, 35, 93, 255, 134, 171, 245, 23, 60, 111, 117, 65, 178, 146, 249, 85, 9, 6, 106, 6, 152, 37, 195, 89, 54 },
                            PasswordSalt = new byte[] { 214, 36, 167, 16, 202, 10, 182, 22, 107, 26, 196, 228, 104, 67, 175, 213, 211, 103, 69, 96, 118, 16, 17, 41, 123, 179, 144, 80, 235, 12, 199, 115, 80, 96, 227, 119, 221, 187, 206, 170, 210, 187, 195, 25, 224, 160, 93, 194, 6, 231, 221, 136, 45, 179, 119, 34, 11, 25, 199, 244, 101, 186, 158, 109, 166, 146, 197, 86, 186, 6, 120, 59, 103, 185, 68, 205, 204, 86, 198, 242, 215, 150, 138, 76, 224, 230, 170, 133, 82, 168, 143, 118, 48, 173, 72, 6, 137, 98, 187, 116, 62, 163, 123, 127, 176, 89, 217, 232, 129, 21, 121, 228, 218, 81, 188, 122, 76, 27, 46, 222, 213, 233, 25, 152, 53, 165, 18, 224 },
                            Phone = "12355553333",
                            Role = "staff",
                            Sex = "女"
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(2023, 5, 24, 19, 59, 26, 62, DateTimeKind.Local).AddTicks(7109),
                            Email = "duyou3@example.com",
                            JobId = 2,
                            Name = "罗山",
                            PasswordHash = new byte[] { 60, 155, 98, 119, 197, 144, 7, 169, 238, 216, 83, 251, 133, 255, 163, 9, 13, 153, 52, 190, 117, 215, 9, 0, 52, 26, 209, 5, 70, 245, 151, 77, 250, 128, 64, 82, 73, 45, 241, 95, 35, 93, 255, 134, 171, 245, 23, 60, 111, 117, 65, 178, 146, 249, 85, 9, 6, 106, 6, 152, 37, 195, 89, 54 },
                            PasswordSalt = new byte[] { 214, 36, 167, 16, 202, 10, 182, 22, 107, 26, 196, 228, 104, 67, 175, 213, 211, 103, 69, 96, 118, 16, 17, 41, 123, 179, 144, 80, 235, 12, 199, 115, 80, 96, 227, 119, 221, 187, 206, 170, 210, 187, 195, 25, 224, 160, 93, 194, 6, 231, 221, 136, 45, 179, 119, 34, 11, 25, 199, 244, 101, 186, 158, 109, 166, 146, 197, 86, 186, 6, 120, 59, 103, 185, 68, 205, 204, 86, 198, 242, 215, 150, 138, 76, 224, 230, 170, 133, 82, 168, 143, 118, 48, 173, 72, 6, 137, 98, 187, 116, 62, 163, 123, 127, 176, 89, 217, 232, 129, 21, 121, 228, 218, 81, 188, 122, 76, 27, 46, 222, 213, 233, 25, 152, 53, 165, 18, 224 },
                            Phone = "12355557777",
                            Role = "staff",
                            Sex = "男"
                        },
                        new
                        {
                            Id = 4,
                            DateCreated = new DateTime(2023, 5, 24, 19, 59, 26, 62, DateTimeKind.Local).AddTicks(7110),
                            Email = "duyou4@example.com",
                            JobId = 4,
                            Name = "薛马俊",
                            PasswordHash = new byte[] { 60, 155, 98, 119, 197, 144, 7, 169, 238, 216, 83, 251, 133, 255, 163, 9, 13, 153, 52, 190, 117, 215, 9, 0, 52, 26, 209, 5, 70, 245, 151, 77, 250, 128, 64, 82, 73, 45, 241, 95, 35, 93, 255, 134, 171, 245, 23, 60, 111, 117, 65, 178, 146, 249, 85, 9, 6, 106, 6, 152, 37, 195, 89, 54 },
                            PasswordSalt = new byte[] { 214, 36, 167, 16, 202, 10, 182, 22, 107, 26, 196, 228, 104, 67, 175, 213, 211, 103, 69, 96, 118, 16, 17, 41, 123, 179, 144, 80, 235, 12, 199, 115, 80, 96, 227, 119, 221, 187, 206, 170, 210, 187, 195, 25, 224, 160, 93, 194, 6, 231, 221, 136, 45, 179, 119, 34, 11, 25, 199, 244, 101, 186, 158, 109, 166, 146, 197, 86, 186, 6, 120, 59, 103, 185, 68, 205, 204, 86, 198, 242, 215, 150, 138, 76, 224, 230, 170, 133, 82, 168, 143, 118, 48, 173, 72, 6, 137, 98, 187, 116, 62, 163, 123, 127, 176, 89, 217, 232, 129, 21, 121, 228, 218, 81, 188, 122, 76, 27, 46, 222, 213, 233, 25, 152, 53, 165, 18, 224 },
                            Phone = "12355554444",
                            Role = "staff",
                            Sex = "男"
                        },
                        new
                        {
                            Id = 5,
                            DateCreated = new DateTime(2023, 5, 24, 19, 59, 26, 62, DateTimeKind.Local).AddTicks(7112),
                            Email = "duyou5@example.com",
                            JobId = 5,
                            Name = "彭广",
                            PasswordHash = new byte[] { 60, 155, 98, 119, 197, 144, 7, 169, 238, 216, 83, 251, 133, 255, 163, 9, 13, 153, 52, 190, 117, 215, 9, 0, 52, 26, 209, 5, 70, 245, 151, 77, 250, 128, 64, 82, 73, 45, 241, 95, 35, 93, 255, 134, 171, 245, 23, 60, 111, 117, 65, 178, 146, 249, 85, 9, 6, 106, 6, 152, 37, 195, 89, 54 },
                            PasswordSalt = new byte[] { 214, 36, 167, 16, 202, 10, 182, 22, 107, 26, 196, 228, 104, 67, 175, 213, 211, 103, 69, 96, 118, 16, 17, 41, 123, 179, 144, 80, 235, 12, 199, 115, 80, 96, 227, 119, 221, 187, 206, 170, 210, 187, 195, 25, 224, 160, 93, 194, 6, 231, 221, 136, 45, 179, 119, 34, 11, 25, 199, 244, 101, 186, 158, 109, 166, 146, 197, 86, 186, 6, 120, 59, 103, 185, 68, 205, 204, 86, 198, 242, 215, 150, 138, 76, 224, 230, 170, 133, 82, 168, 143, 118, 48, 173, 72, 6, 137, 98, 187, 116, 62, 163, 123, 127, 176, 89, 217, 232, 129, 21, 121, 228, 218, 81, 188, 122, 76, 27, 46, 222, 213, 233, 25, 152, 53, 165, 18, 224 },
                            Phone = "12322226666",
                            Role = "staff",
                            Sex = "男"
                        },
                        new
                        {
                            Id = 6,
                            DateCreated = new DateTime(2023, 5, 24, 19, 59, 26, 62, DateTimeKind.Local).AddTicks(7113),
                            Email = "duyou6@example.com",
                            JobId = 6,
                            Name = "韦峰",
                            PasswordHash = new byte[] { 60, 155, 98, 119, 197, 144, 7, 169, 238, 216, 83, 251, 133, 255, 163, 9, 13, 153, 52, 190, 117, 215, 9, 0, 52, 26, 209, 5, 70, 245, 151, 77, 250, 128, 64, 82, 73, 45, 241, 95, 35, 93, 255, 134, 171, 245, 23, 60, 111, 117, 65, 178, 146, 249, 85, 9, 6, 106, 6, 152, 37, 195, 89, 54 },
                            PasswordSalt = new byte[] { 214, 36, 167, 16, 202, 10, 182, 22, 107, 26, 196, 228, 104, 67, 175, 213, 211, 103, 69, 96, 118, 16, 17, 41, 123, 179, 144, 80, 235, 12, 199, 115, 80, 96, 227, 119, 221, 187, 206, 170, 210, 187, 195, 25, 224, 160, 93, 194, 6, 231, 221, 136, 45, 179, 119, 34, 11, 25, 199, 244, 101, 186, 158, 109, 166, 146, 197, 86, 186, 6, 120, 59, 103, 185, 68, 205, 204, 86, 198, 242, 215, 150, 138, 76, 224, 230, 170, 133, 82, 168, 143, 118, 48, 173, 72, 6, 137, 98, 187, 116, 62, 163, 123, 127, 176, 89, 217, 232, 129, 21, 121, 228, 218, 81, 188, 122, 76, 27, 46, 222, 213, 233, 25, 152, 53, 165, 18, 224 },
                            Phone = "12355551234",
                            Role = "staff",
                            Sex = "男"
                        },
                        new
                        {
                            Id = 7,
                            DateCreated = new DateTime(2023, 5, 24, 19, 59, 26, 62, DateTimeKind.Local).AddTicks(7115),
                            Email = "duyou7@example.com",
                            JobId = 9,
                            Name = "萧玉晨",
                            PasswordHash = new byte[] { 60, 155, 98, 119, 197, 144, 7, 169, 238, 216, 83, 251, 133, 255, 163, 9, 13, 153, 52, 190, 117, 215, 9, 0, 52, 26, 209, 5, 70, 245, 151, 77, 250, 128, 64, 82, 73, 45, 241, 95, 35, 93, 255, 134, 171, 245, 23, 60, 111, 117, 65, 178, 146, 249, 85, 9, 6, 106, 6, 152, 37, 195, 89, 54 },
                            PasswordSalt = new byte[] { 214, 36, 167, 16, 202, 10, 182, 22, 107, 26, 196, 228, 104, 67, 175, 213, 211, 103, 69, 96, 118, 16, 17, 41, 123, 179, 144, 80, 235, 12, 199, 115, 80, 96, 227, 119, 221, 187, 206, 170, 210, 187, 195, 25, 224, 160, 93, 194, 6, 231, 221, 136, 45, 179, 119, 34, 11, 25, 199, 244, 101, 186, 158, 109, 166, 146, 197, 86, 186, 6, 120, 59, 103, 185, 68, 205, 204, 86, 198, 242, 215, 150, 138, 76, 224, 230, 170, 133, 82, 168, 143, 118, 48, 173, 72, 6, 137, 98, 187, 116, 62, 163, 123, 127, 176, 89, 217, 232, 129, 21, 121, 228, 218, 81, 188, 122, 76, 27, 46, 222, 213, 233, 25, 152, 53, 165, 18, 224 },
                            Phone = "12355557766",
                            Role = "staff",
                            Sex = "女"
                        },
                        new
                        {
                            Id = 8,
                            DateCreated = new DateTime(2023, 5, 24, 19, 59, 26, 62, DateTimeKind.Local).AddTicks(7116),
                            Email = "duyou8@example.com",
                            JobId = 7,
                            Name = "丁钧",
                            PasswordHash = new byte[] { 60, 155, 98, 119, 197, 144, 7, 169, 238, 216, 83, 251, 133, 255, 163, 9, 13, 153, 52, 190, 117, 215, 9, 0, 52, 26, 209, 5, 70, 245, 151, 77, 250, 128, 64, 82, 73, 45, 241, 95, 35, 93, 255, 134, 171, 245, 23, 60, 111, 117, 65, 178, 146, 249, 85, 9, 6, 106, 6, 152, 37, 195, 89, 54 },
                            PasswordSalt = new byte[] { 214, 36, 167, 16, 202, 10, 182, 22, 107, 26, 196, 228, 104, 67, 175, 213, 211, 103, 69, 96, 118, 16, 17, 41, 123, 179, 144, 80, 235, 12, 199, 115, 80, 96, 227, 119, 221, 187, 206, 170, 210, 187, 195, 25, 224, 160, 93, 194, 6, 231, 221, 136, 45, 179, 119, 34, 11, 25, 199, 244, 101, 186, 158, 109, 166, 146, 197, 86, 186, 6, 120, 59, 103, 185, 68, 205, 204, 86, 198, 242, 215, 150, 138, 76, 224, 230, 170, 133, 82, 168, 143, 118, 48, 173, 72, 6, 137, 98, 187, 116, 62, 163, 123, 127, 176, 89, 217, 232, 129, 21, 121, 228, 218, 81, 188, 122, 76, 27, 46, 222, 213, 233, 25, 152, 53, 165, 18, 224 },
                            Phone = "12355556866",
                            Role = "staff",
                            Sex = "男"
                        },
                        new
                        {
                            Id = 9,
                            DateCreated = new DateTime(2023, 5, 24, 19, 59, 26, 62, DateTimeKind.Local).AddTicks(7118),
                            Email = "duyou9@example.com",
                            JobId = 9,
                            Name = "沈琼",
                            PasswordHash = new byte[] { 60, 155, 98, 119, 197, 144, 7, 169, 238, 216, 83, 251, 133, 255, 163, 9, 13, 153, 52, 190, 117, 215, 9, 0, 52, 26, 209, 5, 70, 245, 151, 77, 250, 128, 64, 82, 73, 45, 241, 95, 35, 93, 255, 134, 171, 245, 23, 60, 111, 117, 65, 178, 146, 249, 85, 9, 6, 106, 6, 152, 37, 195, 89, 54 },
                            PasswordSalt = new byte[] { 214, 36, 167, 16, 202, 10, 182, 22, 107, 26, 196, 228, 104, 67, 175, 213, 211, 103, 69, 96, 118, 16, 17, 41, 123, 179, 144, 80, 235, 12, 199, 115, 80, 96, 227, 119, 221, 187, 206, 170, 210, 187, 195, 25, 224, 160, 93, 194, 6, 231, 221, 136, 45, 179, 119, 34, 11, 25, 199, 244, 101, 186, 158, 109, 166, 146, 197, 86, 186, 6, 120, 59, 103, 185, 68, 205, 204, 86, 198, 242, 215, 150, 138, 76, 224, 230, 170, 133, 82, 168, 143, 118, 48, 173, 72, 6, 137, 98, 187, 116, 62, 163, 123, 127, 176, 89, 217, 232, 129, 21, 121, 228, 218, 81, 188, 122, 76, 27, 46, 222, 213, 233, 25, 152, 53, 165, 18, 224 },
                            Phone = "12355556699",
                            Role = "staff",
                            Sex = "女"
                        });
                });

            modelBuilder.Entity("SkillSystem.Shared.Course", b =>
                {
                    b.HasOne("SkillSystem.Shared.Skill", "Skill")
                        .WithMany()
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkillSystem.Shared.SkillType", "SkillType")
                        .WithMany()
                        .HasForeignKey("SkillTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skill");

                    b.Navigation("SkillType");
                });

            modelBuilder.Entity("SkillSystem.Shared.Job", b =>
                {
                    b.HasOne("SkillSystem.Shared.Department", "Department")
                        .WithMany("JobList")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("SkillSystem.Shared.SkillLicense", b =>
                {
                    b.HasOne("SkillSystem.Shared.Skill", "Skill")
                        .WithMany()
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkillSystem.Shared.SkillType", "SkillType")
                        .WithMany()
                        .HasForeignKey("SkillTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkillSystem.Shared.User", "User")
                        .WithMany("SkillLicenses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skill");

                    b.Navigation("SkillType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SkillSystem.Shared.SkillVariant", b =>
                {
                    b.HasOne("SkillSystem.Shared.Skill", "Skill")
                        .WithMany("Variants")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkillSystem.Shared.SkillType", "SkillType")
                        .WithMany()
                        .HasForeignKey("SkillTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skill");

                    b.Navigation("SkillType");
                });

            modelBuilder.Entity("SkillSystem.Shared.Training", b =>
                {
                    b.HasOne("SkillSystem.Shared.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("SkillSystem.Shared.TrainingItem", b =>
                {
                    b.HasOne("SkillSystem.Shared.Training", "Training")
                        .WithMany()
                        .HasForeignKey("TrainingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkillSystem.Shared.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Training");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SkillSystem.Shared.User", b =>
                {
                    b.HasOne("SkillSystem.Shared.Job", "Job")
                        .WithMany()
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");
                });

            modelBuilder.Entity("SkillSystem.Shared.Department", b =>
                {
                    b.Navigation("JobList");
                });

            modelBuilder.Entity("SkillSystem.Shared.Skill", b =>
                {
                    b.Navigation("Variants");
                });

            modelBuilder.Entity("SkillSystem.Shared.User", b =>
                {
                    b.Navigation("SkillLicenses");
                });
#pragma warning restore 612, 618
        }
    }
}
