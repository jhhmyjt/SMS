// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SkillSystem.Server.Data;

#nullable disable

namespace SkillSystem.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230524084659_TrainingFlags")]
    partial class TrainingFlags
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SkillSystem.Shared.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.Property<int>("SkillTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SkillId");

                    b.HasIndex("SkillTypeId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "提高英语能力，通过英语四级",
                            Name = "英语四级培训课",
                            SkillId = 2,
                            SkillTypeId = 4
                        },
                        new
                        {
                            Id = 2,
                            Description = "提高计算机能力，通过计算机四级",
                            Name = "计算机四级培训课",
                            SkillId = 1,
                            SkillTypeId = 4
                        },
                        new
                        {
                            Id = 3,
                            Description = "提高Office能力，通过Office二级",
                            Name = "Office二级培训课",
                            SkillId = 4,
                            SkillTypeId = 2
                        });
                });

            modelBuilder.Entity("SkillSystem.Shared.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "负责人事管理相关工作",
                            Name = "人事管理部"
                        },
                        new
                        {
                            Id = 2,
                            Description = "负责产品开发相关工作",
                            Name = "开发部"
                        },
                        new
                        {
                            Id = 3,
                            Description = "负责人员联络工作",
                            Name = "联络部"
                        });
                });

            modelBuilder.Entity("SkillSystem.Shared.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Job");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentId = 1,
                            Description = "人事管理部主管",
                            Name = "部门主管"
                        },
                        new
                        {
                            Id = 2,
                            DepartmentId = 2,
                            Description = "开发部主管",
                            Name = "部门主管"
                        },
                        new
                        {
                            Id = 3,
                            DepartmentId = 3,
                            Description = "联络部主管",
                            Name = "部门主管"
                        },
                        new
                        {
                            Id = 4,
                            DepartmentId = 1,
                            Description = "人事管理部普通员工",
                            Name = "普通员工"
                        },
                        new
                        {
                            Id = 5,
                            DepartmentId = 1,
                            Description = "人事管理部普通员工",
                            Name = "普通员工"
                        },
                        new
                        {
                            Id = 6,
                            DepartmentId = 2,
                            Description = "开发部普通员工",
                            Name = "普通员工"
                        },
                        new
                        {
                            Id = 7,
                            DepartmentId = 2,
                            Description = "开发部普通员工",
                            Name = "普通员工"
                        },
                        new
                        {
                            Id = 8,
                            DepartmentId = 3,
                            Description = "联络部普通员工",
                            Name = "普通员工"
                        },
                        new
                        {
                            Id = 9,
                            DepartmentId = 3,
                            Description = "联络部普通员工",
                            Name = "普通员工"
                        });
                });

            modelBuilder.Entity("SkillSystem.Shared.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Skill");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "计算机操作能力",
                            Name = "计算机"
                        },
                        new
                        {
                            Id = 2,
                            Description = "英语交流能力",
                            Name = "英语"
                        },
                        new
                        {
                            Id = 3,
                            Description = "普通话交流能力",
                            Name = "普通话"
                        },
                        new
                        {
                            Id = 4,
                            Description = "办公软件能力",
                            Name = "Office"
                        });
                });

            modelBuilder.Entity("SkillSystem.Shared.SkillLicense", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.Property<DateTime>("GetTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("SkillTypeId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "SkillId");

                    b.HasIndex("SkillId");

                    b.HasIndex("SkillTypeId");

                    b.ToTable("SkillLicenses");

                    b.HasData(
                        new
                        {
                            UserId = 9,
                            SkillId = 2,
                            GetTime = new DateTime(2023, 5, 24, 16, 46, 59, 799, DateTimeKind.Local).AddTicks(3438),
                            SkillTypeId = 4
                        },
                        new
                        {
                            UserId = 9,
                            SkillId = 3,
                            GetTime = new DateTime(2023, 5, 24, 16, 46, 59, 799, DateTimeKind.Local).AddTicks(3449),
                            SkillTypeId = 4
                        });
                });

            modelBuilder.Entity("SkillSystem.Shared.SkillType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SkillTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "一级"
                        },
                        new
                        {
                            Id = 2,
                            Name = "二级"
                        },
                        new
                        {
                            Id = 3,
                            Name = "三级"
                        },
                        new
                        {
                            Id = 4,
                            Name = "四级"
                        });
                });

            modelBuilder.Entity("SkillSystem.Shared.SkillVariant", b =>
                {
                    b.Property<int>("SkillTypeId")
                        .HasColumnType("int");

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.Property<string>("Difficulty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SkillTypeId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("SkillVariants");

                    b.HasData(
                        new
                        {
                            SkillTypeId = 2,
                            SkillId = 1,
                            Difficulty = "简单"
                        },
                        new
                        {
                            SkillTypeId = 4,
                            SkillId = 2,
                            Difficulty = "中等"
                        },
                        new
                        {
                            SkillTypeId = 2,
                            SkillId = 3,
                            Difficulty = "简单"
                        },
                        new
                        {
                            SkillTypeId = 4,
                            SkillId = 3,
                            Difficulty = "简单"
                        },
                        new
                        {
                            SkillTypeId = 2,
                            SkillId = 4,
                            Difficulty = "简单"
                        },
                        new
                        {
                            SkillTypeId = 4,
                            SkillId = 4,
                            Difficulty = "中等"
                        });
                });

            modelBuilder.Entity("SkillSystem.Shared.Training", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Finished")
                        .HasColumnType("bit");

                    b.Property<bool>("Going")
                        .HasColumnType("bit");

                    b.Property<int>("MaxCapacity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegisterNumber")
                        .HasColumnType("int");

                    b.Property<bool>("Registering")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Training");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            Description = "第一年度春季英语培训",
                            EndTime = new DateTime(2023, 6, 30, 16, 46, 59, 799, DateTimeKind.Local).AddTicks(3551),
                            Finished = false,
                            Going = false,
                            MaxCapacity = 50,
                            Name = "第一年度春季英语培训",
                            RegisterNumber = 0,
                            Registering = false,
                            StartTime = new DateTime(2023, 5, 31, 16, 46, 59, 799, DateTimeKind.Local).AddTicks(3546),
                            Status = "未开始",
                            Type = "线下",
                            Visible = true
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 2,
                            Description = "第一年度秋季计算机培训",
                            EndTime = new DateTime(2023, 11, 24, 16, 46, 59, 799, DateTimeKind.Local).AddTicks(3556),
                            Finished = false,
                            Going = false,
                            MaxCapacity = 10,
                            Name = "第一年度秋季计算机培训",
                            RegisterNumber = 0,
                            Registering = false,
                            StartTime = new DateTime(2023, 8, 24, 16, 46, 59, 799, DateTimeKind.Local).AddTicks(3553),
                            Status = "未开始",
                            Type = "线上",
                            Visible = true
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 3,
                            Description = "第一年度夏季Office培训",
                            EndTime = new DateTime(2023, 10, 24, 16, 46, 59, 799, DateTimeKind.Local).AddTicks(3558),
                            Finished = false,
                            Going = false,
                            MaxCapacity = 30,
                            Name = "第一年度夏季Office培训",
                            RegisterNumber = 0,
                            Registering = false,
                            StartTime = new DateTime(2023, 7, 24, 16, 46, 59, 799, DateTimeKind.Local).AddTicks(3558),
                            Status = "未开始",
                            Type = "线上",
                            Visible = true
                        });
                });

            modelBuilder.Entity("SkillSystem.Shared.TrainingItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("RegisterTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Score")
                        .HasColumnType("decimal(5,1)");

                    b.Property<int>("TrainingId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<bool>("isFinished")
                        .HasColumnType("bit");

                    b.Property<bool>("isPass")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("TrainingId");

                    b.HasIndex("UserId");

                    b.ToTable("TrainingItems");
                });

            modelBuilder.Entity("SkillSystem.Shared.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2023, 5, 24, 16, 46, 59, 799, DateTimeKind.Local).AddTicks(3803),
                            Email = "duyou@example.com",
                            JobId = 1,
                            Name = "董磊",
                            PasswordHash = new byte[] { 178, 148, 171, 232, 68, 104, 165, 255, 87, 52, 245, 27, 56, 39, 145, 14, 105, 197, 191, 239, 169, 111, 166, 38, 150, 248, 106, 159, 205, 63, 12, 204, 208, 60, 187, 30, 19, 148, 100, 166, 168, 115, 238, 201, 170, 75, 223, 88, 130, 176, 135, 39, 226, 26, 170, 86, 44, 33, 199, 75, 33, 167, 91, 12 },
                            PasswordSalt = new byte[] { 167, 28, 63, 231, 90, 240, 218, 50, 102, 24, 202, 136, 167, 104, 166, 116, 105, 132, 207, 16, 213, 104, 252, 59, 43, 187, 47, 226, 84, 95, 78, 172, 103, 130, 212, 106, 2, 154, 174, 121, 130, 5, 29, 148, 42, 97, 39, 186, 202, 98, 48, 180, 61, 136, 207, 206, 53, 89, 45, 87, 213, 208, 0, 252, 116, 39, 149, 161, 220, 50, 187, 173, 240, 147, 151, 158, 231, 255, 72, 220, 158, 2, 156, 30, 228, 227, 237, 243, 137, 156, 53, 80, 0, 59, 65, 172, 185, 236, 201, 151, 25, 3, 158, 208, 227, 240, 62, 3, 177, 121, 244, 39, 45, 52, 10, 238, 170, 202, 235, 142, 136, 217, 159, 193, 62, 11, 233, 38 },
                            Phone = "12355556666",
                            Role = "staff",
                            Sex = "男"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2023, 5, 24, 16, 46, 59, 799, DateTimeKind.Local).AddTicks(3806),
                            Email = "duyou2@example.com",
                            JobId = 3,
                            Name = "庄娅",
                            PasswordHash = new byte[] { 178, 148, 171, 232, 68, 104, 165, 255, 87, 52, 245, 27, 56, 39, 145, 14, 105, 197, 191, 239, 169, 111, 166, 38, 150, 248, 106, 159, 205, 63, 12, 204, 208, 60, 187, 30, 19, 148, 100, 166, 168, 115, 238, 201, 170, 75, 223, 88, 130, 176, 135, 39, 226, 26, 170, 86, 44, 33, 199, 75, 33, 167, 91, 12 },
                            PasswordSalt = new byte[] { 167, 28, 63, 231, 90, 240, 218, 50, 102, 24, 202, 136, 167, 104, 166, 116, 105, 132, 207, 16, 213, 104, 252, 59, 43, 187, 47, 226, 84, 95, 78, 172, 103, 130, 212, 106, 2, 154, 174, 121, 130, 5, 29, 148, 42, 97, 39, 186, 202, 98, 48, 180, 61, 136, 207, 206, 53, 89, 45, 87, 213, 208, 0, 252, 116, 39, 149, 161, 220, 50, 187, 173, 240, 147, 151, 158, 231, 255, 72, 220, 158, 2, 156, 30, 228, 227, 237, 243, 137, 156, 53, 80, 0, 59, 65, 172, 185, 236, 201, 151, 25, 3, 158, 208, 227, 240, 62, 3, 177, 121, 244, 39, 45, 52, 10, 238, 170, 202, 235, 142, 136, 217, 159, 193, 62, 11, 233, 38 },
                            Phone = "12355553333",
                            Role = "staff",
                            Sex = "女"
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(2023, 5, 24, 16, 46, 59, 799, DateTimeKind.Local).AddTicks(3808),
                            Email = "duyou3@example.com",
                            JobId = 2,
                            Name = "罗山",
                            PasswordHash = new byte[] { 178, 148, 171, 232, 68, 104, 165, 255, 87, 52, 245, 27, 56, 39, 145, 14, 105, 197, 191, 239, 169, 111, 166, 38, 150, 248, 106, 159, 205, 63, 12, 204, 208, 60, 187, 30, 19, 148, 100, 166, 168, 115, 238, 201, 170, 75, 223, 88, 130, 176, 135, 39, 226, 26, 170, 86, 44, 33, 199, 75, 33, 167, 91, 12 },
                            PasswordSalt = new byte[] { 167, 28, 63, 231, 90, 240, 218, 50, 102, 24, 202, 136, 167, 104, 166, 116, 105, 132, 207, 16, 213, 104, 252, 59, 43, 187, 47, 226, 84, 95, 78, 172, 103, 130, 212, 106, 2, 154, 174, 121, 130, 5, 29, 148, 42, 97, 39, 186, 202, 98, 48, 180, 61, 136, 207, 206, 53, 89, 45, 87, 213, 208, 0, 252, 116, 39, 149, 161, 220, 50, 187, 173, 240, 147, 151, 158, 231, 255, 72, 220, 158, 2, 156, 30, 228, 227, 237, 243, 137, 156, 53, 80, 0, 59, 65, 172, 185, 236, 201, 151, 25, 3, 158, 208, 227, 240, 62, 3, 177, 121, 244, 39, 45, 52, 10, 238, 170, 202, 235, 142, 136, 217, 159, 193, 62, 11, 233, 38 },
                            Phone = "12355557777",
                            Role = "staff",
                            Sex = "男"
                        },
                        new
                        {
                            Id = 4,
                            DateCreated = new DateTime(2023, 5, 24, 16, 46, 59, 799, DateTimeKind.Local).AddTicks(3809),
                            Email = "duyou4@example.com",
                            JobId = 4,
                            Name = "薛马俊",
                            PasswordHash = new byte[] { 178, 148, 171, 232, 68, 104, 165, 255, 87, 52, 245, 27, 56, 39, 145, 14, 105, 197, 191, 239, 169, 111, 166, 38, 150, 248, 106, 159, 205, 63, 12, 204, 208, 60, 187, 30, 19, 148, 100, 166, 168, 115, 238, 201, 170, 75, 223, 88, 130, 176, 135, 39, 226, 26, 170, 86, 44, 33, 199, 75, 33, 167, 91, 12 },
                            PasswordSalt = new byte[] { 167, 28, 63, 231, 90, 240, 218, 50, 102, 24, 202, 136, 167, 104, 166, 116, 105, 132, 207, 16, 213, 104, 252, 59, 43, 187, 47, 226, 84, 95, 78, 172, 103, 130, 212, 106, 2, 154, 174, 121, 130, 5, 29, 148, 42, 97, 39, 186, 202, 98, 48, 180, 61, 136, 207, 206, 53, 89, 45, 87, 213, 208, 0, 252, 116, 39, 149, 161, 220, 50, 187, 173, 240, 147, 151, 158, 231, 255, 72, 220, 158, 2, 156, 30, 228, 227, 237, 243, 137, 156, 53, 80, 0, 59, 65, 172, 185, 236, 201, 151, 25, 3, 158, 208, 227, 240, 62, 3, 177, 121, 244, 39, 45, 52, 10, 238, 170, 202, 235, 142, 136, 217, 159, 193, 62, 11, 233, 38 },
                            Phone = "12355554444",
                            Role = "staff",
                            Sex = "男"
                        },
                        new
                        {
                            Id = 5,
                            DateCreated = new DateTime(2023, 5, 24, 16, 46, 59, 799, DateTimeKind.Local).AddTicks(3811),
                            Email = "duyou5@example.com",
                            JobId = 5,
                            Name = "彭广",
                            PasswordHash = new byte[] { 178, 148, 171, 232, 68, 104, 165, 255, 87, 52, 245, 27, 56, 39, 145, 14, 105, 197, 191, 239, 169, 111, 166, 38, 150, 248, 106, 159, 205, 63, 12, 204, 208, 60, 187, 30, 19, 148, 100, 166, 168, 115, 238, 201, 170, 75, 223, 88, 130, 176, 135, 39, 226, 26, 170, 86, 44, 33, 199, 75, 33, 167, 91, 12 },
                            PasswordSalt = new byte[] { 167, 28, 63, 231, 90, 240, 218, 50, 102, 24, 202, 136, 167, 104, 166, 116, 105, 132, 207, 16, 213, 104, 252, 59, 43, 187, 47, 226, 84, 95, 78, 172, 103, 130, 212, 106, 2, 154, 174, 121, 130, 5, 29, 148, 42, 97, 39, 186, 202, 98, 48, 180, 61, 136, 207, 206, 53, 89, 45, 87, 213, 208, 0, 252, 116, 39, 149, 161, 220, 50, 187, 173, 240, 147, 151, 158, 231, 255, 72, 220, 158, 2, 156, 30, 228, 227, 237, 243, 137, 156, 53, 80, 0, 59, 65, 172, 185, 236, 201, 151, 25, 3, 158, 208, 227, 240, 62, 3, 177, 121, 244, 39, 45, 52, 10, 238, 170, 202, 235, 142, 136, 217, 159, 193, 62, 11, 233, 38 },
                            Phone = "12322226666",
                            Role = "staff",
                            Sex = "男"
                        },
                        new
                        {
                            Id = 6,
                            DateCreated = new DateTime(2023, 5, 24, 16, 46, 59, 799, DateTimeKind.Local).AddTicks(3812),
                            Email = "duyou6@example.com",
                            JobId = 6,
                            Name = "韦峰",
                            PasswordHash = new byte[] { 178, 148, 171, 232, 68, 104, 165, 255, 87, 52, 245, 27, 56, 39, 145, 14, 105, 197, 191, 239, 169, 111, 166, 38, 150, 248, 106, 159, 205, 63, 12, 204, 208, 60, 187, 30, 19, 148, 100, 166, 168, 115, 238, 201, 170, 75, 223, 88, 130, 176, 135, 39, 226, 26, 170, 86, 44, 33, 199, 75, 33, 167, 91, 12 },
                            PasswordSalt = new byte[] { 167, 28, 63, 231, 90, 240, 218, 50, 102, 24, 202, 136, 167, 104, 166, 116, 105, 132, 207, 16, 213, 104, 252, 59, 43, 187, 47, 226, 84, 95, 78, 172, 103, 130, 212, 106, 2, 154, 174, 121, 130, 5, 29, 148, 42, 97, 39, 186, 202, 98, 48, 180, 61, 136, 207, 206, 53, 89, 45, 87, 213, 208, 0, 252, 116, 39, 149, 161, 220, 50, 187, 173, 240, 147, 151, 158, 231, 255, 72, 220, 158, 2, 156, 30, 228, 227, 237, 243, 137, 156, 53, 80, 0, 59, 65, 172, 185, 236, 201, 151, 25, 3, 158, 208, 227, 240, 62, 3, 177, 121, 244, 39, 45, 52, 10, 238, 170, 202, 235, 142, 136, 217, 159, 193, 62, 11, 233, 38 },
                            Phone = "12355551234",
                            Role = "staff",
                            Sex = "男"
                        },
                        new
                        {
                            Id = 7,
                            DateCreated = new DateTime(2023, 5, 24, 16, 46, 59, 799, DateTimeKind.Local).AddTicks(3814),
                            Email = "duyou7@example.com",
                            JobId = 9,
                            Name = "萧玉晨",
                            PasswordHash = new byte[] { 178, 148, 171, 232, 68, 104, 165, 255, 87, 52, 245, 27, 56, 39, 145, 14, 105, 197, 191, 239, 169, 111, 166, 38, 150, 248, 106, 159, 205, 63, 12, 204, 208, 60, 187, 30, 19, 148, 100, 166, 168, 115, 238, 201, 170, 75, 223, 88, 130, 176, 135, 39, 226, 26, 170, 86, 44, 33, 199, 75, 33, 167, 91, 12 },
                            PasswordSalt = new byte[] { 167, 28, 63, 231, 90, 240, 218, 50, 102, 24, 202, 136, 167, 104, 166, 116, 105, 132, 207, 16, 213, 104, 252, 59, 43, 187, 47, 226, 84, 95, 78, 172, 103, 130, 212, 106, 2, 154, 174, 121, 130, 5, 29, 148, 42, 97, 39, 186, 202, 98, 48, 180, 61, 136, 207, 206, 53, 89, 45, 87, 213, 208, 0, 252, 116, 39, 149, 161, 220, 50, 187, 173, 240, 147, 151, 158, 231, 255, 72, 220, 158, 2, 156, 30, 228, 227, 237, 243, 137, 156, 53, 80, 0, 59, 65, 172, 185, 236, 201, 151, 25, 3, 158, 208, 227, 240, 62, 3, 177, 121, 244, 39, 45, 52, 10, 238, 170, 202, 235, 142, 136, 217, 159, 193, 62, 11, 233, 38 },
                            Phone = "12355557766",
                            Role = "staff",
                            Sex = "女"
                        },
                        new
                        {
                            Id = 8,
                            DateCreated = new DateTime(2023, 5, 24, 16, 46, 59, 799, DateTimeKind.Local).AddTicks(3815),
                            Email = "duyou8@example.com",
                            JobId = 7,
                            Name = "丁钧",
                            PasswordHash = new byte[] { 178, 148, 171, 232, 68, 104, 165, 255, 87, 52, 245, 27, 56, 39, 145, 14, 105, 197, 191, 239, 169, 111, 166, 38, 150, 248, 106, 159, 205, 63, 12, 204, 208, 60, 187, 30, 19, 148, 100, 166, 168, 115, 238, 201, 170, 75, 223, 88, 130, 176, 135, 39, 226, 26, 170, 86, 44, 33, 199, 75, 33, 167, 91, 12 },
                            PasswordSalt = new byte[] { 167, 28, 63, 231, 90, 240, 218, 50, 102, 24, 202, 136, 167, 104, 166, 116, 105, 132, 207, 16, 213, 104, 252, 59, 43, 187, 47, 226, 84, 95, 78, 172, 103, 130, 212, 106, 2, 154, 174, 121, 130, 5, 29, 148, 42, 97, 39, 186, 202, 98, 48, 180, 61, 136, 207, 206, 53, 89, 45, 87, 213, 208, 0, 252, 116, 39, 149, 161, 220, 50, 187, 173, 240, 147, 151, 158, 231, 255, 72, 220, 158, 2, 156, 30, 228, 227, 237, 243, 137, 156, 53, 80, 0, 59, 65, 172, 185, 236, 201, 151, 25, 3, 158, 208, 227, 240, 62, 3, 177, 121, 244, 39, 45, 52, 10, 238, 170, 202, 235, 142, 136, 217, 159, 193, 62, 11, 233, 38 },
                            Phone = "12355556866",
                            Role = "staff",
                            Sex = "男"
                        },
                        new
                        {
                            Id = 9,
                            DateCreated = new DateTime(2023, 5, 24, 16, 46, 59, 799, DateTimeKind.Local).AddTicks(3817),
                            Email = "duyou9@example.com",
                            JobId = 9,
                            Name = "沈琼",
                            PasswordHash = new byte[] { 178, 148, 171, 232, 68, 104, 165, 255, 87, 52, 245, 27, 56, 39, 145, 14, 105, 197, 191, 239, 169, 111, 166, 38, 150, 248, 106, 159, 205, 63, 12, 204, 208, 60, 187, 30, 19, 148, 100, 166, 168, 115, 238, 201, 170, 75, 223, 88, 130, 176, 135, 39, 226, 26, 170, 86, 44, 33, 199, 75, 33, 167, 91, 12 },
                            PasswordSalt = new byte[] { 167, 28, 63, 231, 90, 240, 218, 50, 102, 24, 202, 136, 167, 104, 166, 116, 105, 132, 207, 16, 213, 104, 252, 59, 43, 187, 47, 226, 84, 95, 78, 172, 103, 130, 212, 106, 2, 154, 174, 121, 130, 5, 29, 148, 42, 97, 39, 186, 202, 98, 48, 180, 61, 136, 207, 206, 53, 89, 45, 87, 213, 208, 0, 252, 116, 39, 149, 161, 220, 50, 187, 173, 240, 147, 151, 158, 231, 255, 72, 220, 158, 2, 156, 30, 228, 227, 237, 243, 137, 156, 53, 80, 0, 59, 65, 172, 185, 236, 201, 151, 25, 3, 158, 208, 227, 240, 62, 3, 177, 121, 244, 39, 45, 52, 10, 238, 170, 202, 235, 142, 136, 217, 159, 193, 62, 11, 233, 38 },
                            Phone = "12355556699",
                            Role = "staff",
                            Sex = "女"
                        });
                });

            modelBuilder.Entity("SkillSystem.Shared.Course", b =>
                {
                    b.HasOne("SkillSystem.Shared.Skill", "Skill")
                        .WithMany()
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkillSystem.Shared.SkillType", "SkillType")
                        .WithMany()
                        .HasForeignKey("SkillTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skill");

                    b.Navigation("SkillType");
                });

            modelBuilder.Entity("SkillSystem.Shared.Job", b =>
                {
                    b.HasOne("SkillSystem.Shared.Department", "Department")
                        .WithMany("JobList")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("SkillSystem.Shared.SkillLicense", b =>
                {
                    b.HasOne("SkillSystem.Shared.Skill", "Skill")
                        .WithMany()
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkillSystem.Shared.SkillType", "SkillType")
                        .WithMany()
                        .HasForeignKey("SkillTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkillSystem.Shared.User", "User")
                        .WithMany("SkillLicenses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skill");

                    b.Navigation("SkillType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SkillSystem.Shared.SkillVariant", b =>
                {
                    b.HasOne("SkillSystem.Shared.Skill", "Skill")
                        .WithMany("Variants")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkillSystem.Shared.SkillType", "SkillType")
                        .WithMany()
                        .HasForeignKey("SkillTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skill");

                    b.Navigation("SkillType");
                });

            modelBuilder.Entity("SkillSystem.Shared.Training", b =>
                {
                    b.HasOne("SkillSystem.Shared.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("SkillSystem.Shared.TrainingItem", b =>
                {
                    b.HasOne("SkillSystem.Shared.Training", "Training")
                        .WithMany()
                        .HasForeignKey("TrainingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkillSystem.Shared.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Training");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SkillSystem.Shared.User", b =>
                {
                    b.HasOne("SkillSystem.Shared.Job", "Job")
                        .WithMany()
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");
                });

            modelBuilder.Entity("SkillSystem.Shared.Department", b =>
                {
                    b.Navigation("JobList");
                });

            modelBuilder.Entity("SkillSystem.Shared.Skill", b =>
                {
                    b.Navigation("Variants");
                });

            modelBuilder.Entity("SkillSystem.Shared.User", b =>
                {
                    b.Navigation("SkillLicenses");
                });
#pragma warning restore 612, 618
        }
    }
}
