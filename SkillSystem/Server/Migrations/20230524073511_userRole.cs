using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace SkillSystem.Server.Migrations
{
    /// <inheritdoc />
    public partial class userRole : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropColumn(
                name: "isSuper",
                table: "Users");

            migrationBuilder.AddColumn<string>(
                name: "Role",
                table: "Users",
                type: "nvarchar(max)",
                nullable: false,
                defaultValue: "");

            migrationBuilder.UpdateData(
                table: "SkillLicenses",
                keyColumns: new[] { "SkillId", "UserId" },
                keyValues: new object[] { 2, 9 },
                column: "GetTime",
                value: new DateTime(2023, 5, 24, 15, 35, 11, 151, DateTimeKind.Local).AddTicks(5211));

            migrationBuilder.UpdateData(
                table: "SkillLicenses",
                keyColumns: new[] { "SkillId", "UserId" },
                keyValues: new object[] { 3, 9 },
                column: "GetTime",
                value: new DateTime(2023, 5, 24, 15, 35, 11, 151, DateTimeKind.Local).AddTicks(5219));

            migrationBuilder.UpdateData(
                table: "Training",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "EndTime", "StartTime" },
                values: new object[] { new DateTime(2023, 6, 30, 15, 35, 11, 151, DateTimeKind.Local).AddTicks(5286), new DateTime(2023, 5, 31, 15, 35, 11, 151, DateTimeKind.Local).AddTicks(5282) });

            migrationBuilder.UpdateData(
                table: "Training",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "EndTime", "StartTime" },
                values: new object[] { new DateTime(2023, 11, 24, 15, 35, 11, 151, DateTimeKind.Local).AddTicks(5290), new DateTime(2023, 8, 24, 15, 35, 11, 151, DateTimeKind.Local).AddTicks(5288) });

            migrationBuilder.UpdateData(
                table: "Training",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "EndTime", "StartTime" },
                values: new object[] { new DateTime(2023, 10, 24, 15, 35, 11, 151, DateTimeKind.Local).AddTicks(5323), new DateTime(2023, 7, 24, 15, 35, 11, 151, DateTimeKind.Local).AddTicks(5322) });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "DateCreated", "PasswordHash", "PasswordSalt", "Role" },
                values: new object[] { new DateTime(2023, 5, 24, 15, 35, 11, 151, DateTimeKind.Local).AddTicks(5572), new byte[] { 94, 202, 76, 156, 222, 145, 87, 148, 8, 205, 190, 140, 109, 155, 227, 108, 59, 141, 249, 227, 109, 146, 23, 64, 176, 249, 57, 62, 113, 118, 21, 109, 37, 4, 70, 172, 53, 37, 237, 20, 46, 46, 172, 251, 205, 56, 114, 177, 251, 136, 205, 167, 237, 141, 58, 182, 11, 16, 229, 42, 183, 93, 121, 42 }, new byte[] { 81, 235, 100, 190, 135, 92, 182, 83, 83, 226, 198, 45, 41, 186, 130, 39, 136, 150, 217, 231, 223, 190, 151, 19, 109, 183, 7, 151, 193, 197, 219, 161, 0, 5, 143, 89, 194, 232, 41, 68, 194, 172, 74, 149, 40, 93, 102, 72, 105, 230, 167, 211, 111, 251, 49, 60, 63, 0, 41, 134, 123, 81, 230, 67, 110, 143, 13, 113, 18, 144, 75, 167, 72, 99, 116, 17, 98, 93, 177, 10, 239, 249, 71, 83, 234, 181, 138, 199, 91, 229, 105, 112, 193, 188, 49, 32, 159, 108, 43, 178, 11, 127, 166, 1, 148, 175, 49, 235, 144, 67, 18, 205, 204, 240, 227, 106, 158, 46, 142, 21, 64, 185, 189, 229, 25, 84, 166, 79 }, "staff" });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "DateCreated", "PasswordHash", "PasswordSalt", "Role" },
                values: new object[] { new DateTime(2023, 5, 24, 15, 35, 11, 151, DateTimeKind.Local).AddTicks(5574), new byte[] { 94, 202, 76, 156, 222, 145, 87, 148, 8, 205, 190, 140, 109, 155, 227, 108, 59, 141, 249, 227, 109, 146, 23, 64, 176, 249, 57, 62, 113, 118, 21, 109, 37, 4, 70, 172, 53, 37, 237, 20, 46, 46, 172, 251, 205, 56, 114, 177, 251, 136, 205, 167, 237, 141, 58, 182, 11, 16, 229, 42, 183, 93, 121, 42 }, new byte[] { 81, 235, 100, 190, 135, 92, 182, 83, 83, 226, 198, 45, 41, 186, 130, 39, 136, 150, 217, 231, 223, 190, 151, 19, 109, 183, 7, 151, 193, 197, 219, 161, 0, 5, 143, 89, 194, 232, 41, 68, 194, 172, 74, 149, 40, 93, 102, 72, 105, 230, 167, 211, 111, 251, 49, 60, 63, 0, 41, 134, 123, 81, 230, 67, 110, 143, 13, 113, 18, 144, 75, 167, 72, 99, 116, 17, 98, 93, 177, 10, 239, 249, 71, 83, 234, 181, 138, 199, 91, 229, 105, 112, 193, 188, 49, 32, 159, 108, 43, 178, 11, 127, 166, 1, 148, 175, 49, 235, 144, 67, 18, 205, 204, 240, 227, 106, 158, 46, 142, 21, 64, 185, 189, 229, 25, 84, 166, 79 }, "staff" });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "DateCreated", "PasswordHash", "PasswordSalt", "Role" },
                values: new object[] { new DateTime(2023, 5, 24, 15, 35, 11, 151, DateTimeKind.Local).AddTicks(5576), new byte[] { 94, 202, 76, 156, 222, 145, 87, 148, 8, 205, 190, 140, 109, 155, 227, 108, 59, 141, 249, 227, 109, 146, 23, 64, 176, 249, 57, 62, 113, 118, 21, 109, 37, 4, 70, 172, 53, 37, 237, 20, 46, 46, 172, 251, 205, 56, 114, 177, 251, 136, 205, 167, 237, 141, 58, 182, 11, 16, 229, 42, 183, 93, 121, 42 }, new byte[] { 81, 235, 100, 190, 135, 92, 182, 83, 83, 226, 198, 45, 41, 186, 130, 39, 136, 150, 217, 231, 223, 190, 151, 19, 109, 183, 7, 151, 193, 197, 219, 161, 0, 5, 143, 89, 194, 232, 41, 68, 194, 172, 74, 149, 40, 93, 102, 72, 105, 230, 167, 211, 111, 251, 49, 60, 63, 0, 41, 134, 123, 81, 230, 67, 110, 143, 13, 113, 18, 144, 75, 167, 72, 99, 116, 17, 98, 93, 177, 10, 239, 249, 71, 83, 234, 181, 138, 199, 91, 229, 105, 112, 193, 188, 49, 32, 159, 108, 43, 178, 11, 127, 166, 1, 148, 175, 49, 235, 144, 67, 18, 205, 204, 240, 227, 106, 158, 46, 142, 21, 64, 185, 189, 229, 25, 84, 166, 79 }, "staff" });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "DateCreated", "PasswordHash", "PasswordSalt", "Role" },
                values: new object[] { new DateTime(2023, 5, 24, 15, 35, 11, 151, DateTimeKind.Local).AddTicks(5578), new byte[] { 94, 202, 76, 156, 222, 145, 87, 148, 8, 205, 190, 140, 109, 155, 227, 108, 59, 141, 249, 227, 109, 146, 23, 64, 176, 249, 57, 62, 113, 118, 21, 109, 37, 4, 70, 172, 53, 37, 237, 20, 46, 46, 172, 251, 205, 56, 114, 177, 251, 136, 205, 167, 237, 141, 58, 182, 11, 16, 229, 42, 183, 93, 121, 42 }, new byte[] { 81, 235, 100, 190, 135, 92, 182, 83, 83, 226, 198, 45, 41, 186, 130, 39, 136, 150, 217, 231, 223, 190, 151, 19, 109, 183, 7, 151, 193, 197, 219, 161, 0, 5, 143, 89, 194, 232, 41, 68, 194, 172, 74, 149, 40, 93, 102, 72, 105, 230, 167, 211, 111, 251, 49, 60, 63, 0, 41, 134, 123, 81, 230, 67, 110, 143, 13, 113, 18, 144, 75, 167, 72, 99, 116, 17, 98, 93, 177, 10, 239, 249, 71, 83, 234, 181, 138, 199, 91, 229, 105, 112, 193, 188, 49, 32, 159, 108, 43, 178, 11, 127, 166, 1, 148, 175, 49, 235, 144, 67, 18, 205, 204, 240, 227, 106, 158, 46, 142, 21, 64, 185, 189, 229, 25, 84, 166, 79 }, "staff" });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 5,
                columns: new[] { "DateCreated", "PasswordHash", "PasswordSalt", "Role" },
                values: new object[] { new DateTime(2023, 5, 24, 15, 35, 11, 151, DateTimeKind.Local).AddTicks(5579), new byte[] { 94, 202, 76, 156, 222, 145, 87, 148, 8, 205, 190, 140, 109, 155, 227, 108, 59, 141, 249, 227, 109, 146, 23, 64, 176, 249, 57, 62, 113, 118, 21, 109, 37, 4, 70, 172, 53, 37, 237, 20, 46, 46, 172, 251, 205, 56, 114, 177, 251, 136, 205, 167, 237, 141, 58, 182, 11, 16, 229, 42, 183, 93, 121, 42 }, new byte[] { 81, 235, 100, 190, 135, 92, 182, 83, 83, 226, 198, 45, 41, 186, 130, 39, 136, 150, 217, 231, 223, 190, 151, 19, 109, 183, 7, 151, 193, 197, 219, 161, 0, 5, 143, 89, 194, 232, 41, 68, 194, 172, 74, 149, 40, 93, 102, 72, 105, 230, 167, 211, 111, 251, 49, 60, 63, 0, 41, 134, 123, 81, 230, 67, 110, 143, 13, 113, 18, 144, 75, 167, 72, 99, 116, 17, 98, 93, 177, 10, 239, 249, 71, 83, 234, 181, 138, 199, 91, 229, 105, 112, 193, 188, 49, 32, 159, 108, 43, 178, 11, 127, 166, 1, 148, 175, 49, 235, 144, 67, 18, 205, 204, 240, 227, 106, 158, 46, 142, 21, 64, 185, 189, 229, 25, 84, 166, 79 }, "staff" });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 6,
                columns: new[] { "DateCreated", "PasswordHash", "PasswordSalt", "Role" },
                values: new object[] { new DateTime(2023, 5, 24, 15, 35, 11, 151, DateTimeKind.Local).AddTicks(5581), new byte[] { 94, 202, 76, 156, 222, 145, 87, 148, 8, 205, 190, 140, 109, 155, 227, 108, 59, 141, 249, 227, 109, 146, 23, 64, 176, 249, 57, 62, 113, 118, 21, 109, 37, 4, 70, 172, 53, 37, 237, 20, 46, 46, 172, 251, 205, 56, 114, 177, 251, 136, 205, 167, 237, 141, 58, 182, 11, 16, 229, 42, 183, 93, 121, 42 }, new byte[] { 81, 235, 100, 190, 135, 92, 182, 83, 83, 226, 198, 45, 41, 186, 130, 39, 136, 150, 217, 231, 223, 190, 151, 19, 109, 183, 7, 151, 193, 197, 219, 161, 0, 5, 143, 89, 194, 232, 41, 68, 194, 172, 74, 149, 40, 93, 102, 72, 105, 230, 167, 211, 111, 251, 49, 60, 63, 0, 41, 134, 123, 81, 230, 67, 110, 143, 13, 113, 18, 144, 75, 167, 72, 99, 116, 17, 98, 93, 177, 10, 239, 249, 71, 83, 234, 181, 138, 199, 91, 229, 105, 112, 193, 188, 49, 32, 159, 108, 43, 178, 11, 127, 166, 1, 148, 175, 49, 235, 144, 67, 18, 205, 204, 240, 227, 106, 158, 46, 142, 21, 64, 185, 189, 229, 25, 84, 166, 79 }, "staff" });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 7,
                columns: new[] { "DateCreated", "PasswordHash", "PasswordSalt", "Role" },
                values: new object[] { new DateTime(2023, 5, 24, 15, 35, 11, 151, DateTimeKind.Local).AddTicks(5582), new byte[] { 94, 202, 76, 156, 222, 145, 87, 148, 8, 205, 190, 140, 109, 155, 227, 108, 59, 141, 249, 227, 109, 146, 23, 64, 176, 249, 57, 62, 113, 118, 21, 109, 37, 4, 70, 172, 53, 37, 237, 20, 46, 46, 172, 251, 205, 56, 114, 177, 251, 136, 205, 167, 237, 141, 58, 182, 11, 16, 229, 42, 183, 93, 121, 42 }, new byte[] { 81, 235, 100, 190, 135, 92, 182, 83, 83, 226, 198, 45, 41, 186, 130, 39, 136, 150, 217, 231, 223, 190, 151, 19, 109, 183, 7, 151, 193, 197, 219, 161, 0, 5, 143, 89, 194, 232, 41, 68, 194, 172, 74, 149, 40, 93, 102, 72, 105, 230, 167, 211, 111, 251, 49, 60, 63, 0, 41, 134, 123, 81, 230, 67, 110, 143, 13, 113, 18, 144, 75, 167, 72, 99, 116, 17, 98, 93, 177, 10, 239, 249, 71, 83, 234, 181, 138, 199, 91, 229, 105, 112, 193, 188, 49, 32, 159, 108, 43, 178, 11, 127, 166, 1, 148, 175, 49, 235, 144, 67, 18, 205, 204, 240, 227, 106, 158, 46, 142, 21, 64, 185, 189, 229, 25, 84, 166, 79 }, "staff" });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 8,
                columns: new[] { "DateCreated", "PasswordHash", "PasswordSalt", "Role" },
                values: new object[] { new DateTime(2023, 5, 24, 15, 35, 11, 151, DateTimeKind.Local).AddTicks(5584), new byte[] { 94, 202, 76, 156, 222, 145, 87, 148, 8, 205, 190, 140, 109, 155, 227, 108, 59, 141, 249, 227, 109, 146, 23, 64, 176, 249, 57, 62, 113, 118, 21, 109, 37, 4, 70, 172, 53, 37, 237, 20, 46, 46, 172, 251, 205, 56, 114, 177, 251, 136, 205, 167, 237, 141, 58, 182, 11, 16, 229, 42, 183, 93, 121, 42 }, new byte[] { 81, 235, 100, 190, 135, 92, 182, 83, 83, 226, 198, 45, 41, 186, 130, 39, 136, 150, 217, 231, 223, 190, 151, 19, 109, 183, 7, 151, 193, 197, 219, 161, 0, 5, 143, 89, 194, 232, 41, 68, 194, 172, 74, 149, 40, 93, 102, 72, 105, 230, 167, 211, 111, 251, 49, 60, 63, 0, 41, 134, 123, 81, 230, 67, 110, 143, 13, 113, 18, 144, 75, 167, 72, 99, 116, 17, 98, 93, 177, 10, 239, 249, 71, 83, 234, 181, 138, 199, 91, 229, 105, 112, 193, 188, 49, 32, 159, 108, 43, 178, 11, 127, 166, 1, 148, 175, 49, 235, 144, 67, 18, 205, 204, 240, 227, 106, 158, 46, 142, 21, 64, 185, 189, 229, 25, 84, 166, 79 }, "staff" });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 9,
                columns: new[] { "DateCreated", "PasswordHash", "PasswordSalt", "Role" },
                values: new object[] { new DateTime(2023, 5, 24, 15, 35, 11, 151, DateTimeKind.Local).AddTicks(5585), new byte[] { 94, 202, 76, 156, 222, 145, 87, 148, 8, 205, 190, 140, 109, 155, 227, 108, 59, 141, 249, 227, 109, 146, 23, 64, 176, 249, 57, 62, 113, 118, 21, 109, 37, 4, 70, 172, 53, 37, 237, 20, 46, 46, 172, 251, 205, 56, 114, 177, 251, 136, 205, 167, 237, 141, 58, 182, 11, 16, 229, 42, 183, 93, 121, 42 }, new byte[] { 81, 235, 100, 190, 135, 92, 182, 83, 83, 226, 198, 45, 41, 186, 130, 39, 136, 150, 217, 231, 223, 190, 151, 19, 109, 183, 7, 151, 193, 197, 219, 161, 0, 5, 143, 89, 194, 232, 41, 68, 194, 172, 74, 149, 40, 93, 102, 72, 105, 230, 167, 211, 111, 251, 49, 60, 63, 0, 41, 134, 123, 81, 230, 67, 110, 143, 13, 113, 18, 144, 75, 167, 72, 99, 116, 17, 98, 93, 177, 10, 239, 249, 71, 83, 234, 181, 138, 199, 91, 229, 105, 112, 193, 188, 49, 32, 159, 108, 43, 178, 11, 127, 166, 1, 148, 175, 49, 235, 144, 67, 18, 205, 204, 240, 227, 106, 158, 46, 142, 21, 64, 185, 189, 229, 25, 84, 166, 79 }, "staff" });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropColumn(
                name: "Role",
                table: "Users");

            migrationBuilder.AddColumn<bool>(
                name: "isSuper",
                table: "Users",
                type: "bit",
                nullable: false,
                defaultValue: false);

            migrationBuilder.UpdateData(
                table: "SkillLicenses",
                keyColumns: new[] { "SkillId", "UserId" },
                keyValues: new object[] { 2, 9 },
                column: "GetTime",
                value: new DateTime(2023, 5, 23, 20, 2, 11, 240, DateTimeKind.Local).AddTicks(3361));

            migrationBuilder.UpdateData(
                table: "SkillLicenses",
                keyColumns: new[] { "SkillId", "UserId" },
                keyValues: new object[] { 3, 9 },
                column: "GetTime",
                value: new DateTime(2023, 5, 23, 20, 2, 11, 240, DateTimeKind.Local).AddTicks(3368));

            migrationBuilder.UpdateData(
                table: "Training",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "EndTime", "StartTime" },
                values: new object[] { new DateTime(2023, 6, 29, 20, 2, 11, 240, DateTimeKind.Local).AddTicks(3467), new DateTime(2023, 5, 30, 20, 2, 11, 240, DateTimeKind.Local).AddTicks(3459) });

            migrationBuilder.UpdateData(
                table: "Training",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "EndTime", "StartTime" },
                values: new object[] { new DateTime(2023, 11, 23, 20, 2, 11, 240, DateTimeKind.Local).AddTicks(3470), new DateTime(2023, 8, 23, 20, 2, 11, 240, DateTimeKind.Local).AddTicks(3469) });

            migrationBuilder.UpdateData(
                table: "Training",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "EndTime", "StartTime" },
                values: new object[] { new DateTime(2023, 10, 23, 20, 2, 11, 240, DateTimeKind.Local).AddTicks(3473), new DateTime(2023, 7, 23, 20, 2, 11, 240, DateTimeKind.Local).AddTicks(3472) });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "DateCreated", "PasswordHash", "PasswordSalt", "isSuper" },
                values: new object[] { new DateTime(2023, 5, 23, 20, 2, 11, 240, DateTimeKind.Local).AddTicks(3700), new byte[] { 166, 112, 66, 244, 176, 51, 98, 253, 51, 231, 22, 235, 32, 28, 191, 115, 238, 111, 114, 151, 26, 172, 76, 244, 81, 48, 2, 150, 159, 246, 236, 97, 129, 133, 31, 78, 219, 32, 44, 23, 37, 185, 210, 228, 234, 149, 86, 186, 44, 4, 205, 181, 65, 207, 149, 80, 188, 134, 32, 225, 199, 46, 46, 223 }, new byte[] { 253, 54, 164, 153, 131, 66, 99, 115, 249, 8, 107, 245, 45, 121, 241, 143, 122, 136, 231, 3, 248, 17, 1, 60, 60, 207, 184, 165, 154, 175, 129, 199, 248, 115, 213, 44, 93, 197, 123, 154, 161, 182, 18, 222, 224, 253, 147, 68, 6, 139, 35, 135, 97, 39, 247, 105, 24, 242, 140, 211, 67, 181, 159, 127, 217, 13, 238, 201, 68, 146, 47, 64, 66, 165, 152, 1, 70, 113, 184, 62, 200, 218, 172, 4, 12, 221, 75, 67, 91, 94, 49, 95, 26, 27, 87, 243, 195, 179, 57, 88, 115, 125, 81, 206, 75, 169, 203, 40, 132, 245, 25, 146, 251, 85, 145, 112, 235, 60, 212, 97, 38, 192, 130, 237, 63, 238, 53, 108 }, false });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "DateCreated", "PasswordHash", "PasswordSalt", "isSuper" },
                values: new object[] { new DateTime(2023, 5, 23, 20, 2, 11, 240, DateTimeKind.Local).AddTicks(3703), new byte[] { 166, 112, 66, 244, 176, 51, 98, 253, 51, 231, 22, 235, 32, 28, 191, 115, 238, 111, 114, 151, 26, 172, 76, 244, 81, 48, 2, 150, 159, 246, 236, 97, 129, 133, 31, 78, 219, 32, 44, 23, 37, 185, 210, 228, 234, 149, 86, 186, 44, 4, 205, 181, 65, 207, 149, 80, 188, 134, 32, 225, 199, 46, 46, 223 }, new byte[] { 253, 54, 164, 153, 131, 66, 99, 115, 249, 8, 107, 245, 45, 121, 241, 143, 122, 136, 231, 3, 248, 17, 1, 60, 60, 207, 184, 165, 154, 175, 129, 199, 248, 115, 213, 44, 93, 197, 123, 154, 161, 182, 18, 222, 224, 253, 147, 68, 6, 139, 35, 135, 97, 39, 247, 105, 24, 242, 140, 211, 67, 181, 159, 127, 217, 13, 238, 201, 68, 146, 47, 64, 66, 165, 152, 1, 70, 113, 184, 62, 200, 218, 172, 4, 12, 221, 75, 67, 91, 94, 49, 95, 26, 27, 87, 243, 195, 179, 57, 88, 115, 125, 81, 206, 75, 169, 203, 40, 132, 245, 25, 146, 251, 85, 145, 112, 235, 60, 212, 97, 38, 192, 130, 237, 63, 238, 53, 108 }, false });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "DateCreated", "PasswordHash", "PasswordSalt", "isSuper" },
                values: new object[] { new DateTime(2023, 5, 23, 20, 2, 11, 240, DateTimeKind.Local).AddTicks(3705), new byte[] { 166, 112, 66, 244, 176, 51, 98, 253, 51, 231, 22, 235, 32, 28, 191, 115, 238, 111, 114, 151, 26, 172, 76, 244, 81, 48, 2, 150, 159, 246, 236, 97, 129, 133, 31, 78, 219, 32, 44, 23, 37, 185, 210, 228, 234, 149, 86, 186, 44, 4, 205, 181, 65, 207, 149, 80, 188, 134, 32, 225, 199, 46, 46, 223 }, new byte[] { 253, 54, 164, 153, 131, 66, 99, 115, 249, 8, 107, 245, 45, 121, 241, 143, 122, 136, 231, 3, 248, 17, 1, 60, 60, 207, 184, 165, 154, 175, 129, 199, 248, 115, 213, 44, 93, 197, 123, 154, 161, 182, 18, 222, 224, 253, 147, 68, 6, 139, 35, 135, 97, 39, 247, 105, 24, 242, 140, 211, 67, 181, 159, 127, 217, 13, 238, 201, 68, 146, 47, 64, 66, 165, 152, 1, 70, 113, 184, 62, 200, 218, 172, 4, 12, 221, 75, 67, 91, 94, 49, 95, 26, 27, 87, 243, 195, 179, 57, 88, 115, 125, 81, 206, 75, 169, 203, 40, 132, 245, 25, 146, 251, 85, 145, 112, 235, 60, 212, 97, 38, 192, 130, 237, 63, 238, 53, 108 }, false });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "DateCreated", "PasswordHash", "PasswordSalt", "isSuper" },
                values: new object[] { new DateTime(2023, 5, 23, 20, 2, 11, 240, DateTimeKind.Local).AddTicks(3707), new byte[] { 166, 112, 66, 244, 176, 51, 98, 253, 51, 231, 22, 235, 32, 28, 191, 115, 238, 111, 114, 151, 26, 172, 76, 244, 81, 48, 2, 150, 159, 246, 236, 97, 129, 133, 31, 78, 219, 32, 44, 23, 37, 185, 210, 228, 234, 149, 86, 186, 44, 4, 205, 181, 65, 207, 149, 80, 188, 134, 32, 225, 199, 46, 46, 223 }, new byte[] { 253, 54, 164, 153, 131, 66, 99, 115, 249, 8, 107, 245, 45, 121, 241, 143, 122, 136, 231, 3, 248, 17, 1, 60, 60, 207, 184, 165, 154, 175, 129, 199, 248, 115, 213, 44, 93, 197, 123, 154, 161, 182, 18, 222, 224, 253, 147, 68, 6, 139, 35, 135, 97, 39, 247, 105, 24, 242, 140, 211, 67, 181, 159, 127, 217, 13, 238, 201, 68, 146, 47, 64, 66, 165, 152, 1, 70, 113, 184, 62, 200, 218, 172, 4, 12, 221, 75, 67, 91, 94, 49, 95, 26, 27, 87, 243, 195, 179, 57, 88, 115, 125, 81, 206, 75, 169, 203, 40, 132, 245, 25, 146, 251, 85, 145, 112, 235, 60, 212, 97, 38, 192, 130, 237, 63, 238, 53, 108 }, false });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 5,
                columns: new[] { "DateCreated", "PasswordHash", "PasswordSalt", "isSuper" },
                values: new object[] { new DateTime(2023, 5, 23, 20, 2, 11, 240, DateTimeKind.Local).AddTicks(3708), new byte[] { 166, 112, 66, 244, 176, 51, 98, 253, 51, 231, 22, 235, 32, 28, 191, 115, 238, 111, 114, 151, 26, 172, 76, 244, 81, 48, 2, 150, 159, 246, 236, 97, 129, 133, 31, 78, 219, 32, 44, 23, 37, 185, 210, 228, 234, 149, 86, 186, 44, 4, 205, 181, 65, 207, 149, 80, 188, 134, 32, 225, 199, 46, 46, 223 }, new byte[] { 253, 54, 164, 153, 131, 66, 99, 115, 249, 8, 107, 245, 45, 121, 241, 143, 122, 136, 231, 3, 248, 17, 1, 60, 60, 207, 184, 165, 154, 175, 129, 199, 248, 115, 213, 44, 93, 197, 123, 154, 161, 182, 18, 222, 224, 253, 147, 68, 6, 139, 35, 135, 97, 39, 247, 105, 24, 242, 140, 211, 67, 181, 159, 127, 217, 13, 238, 201, 68, 146, 47, 64, 66, 165, 152, 1, 70, 113, 184, 62, 200, 218, 172, 4, 12, 221, 75, 67, 91, 94, 49, 95, 26, 27, 87, 243, 195, 179, 57, 88, 115, 125, 81, 206, 75, 169, 203, 40, 132, 245, 25, 146, 251, 85, 145, 112, 235, 60, 212, 97, 38, 192, 130, 237, 63, 238, 53, 108 }, false });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 6,
                columns: new[] { "DateCreated", "PasswordHash", "PasswordSalt", "isSuper" },
                values: new object[] { new DateTime(2023, 5, 23, 20, 2, 11, 240, DateTimeKind.Local).AddTicks(3709), new byte[] { 166, 112, 66, 244, 176, 51, 98, 253, 51, 231, 22, 235, 32, 28, 191, 115, 238, 111, 114, 151, 26, 172, 76, 244, 81, 48, 2, 150, 159, 246, 236, 97, 129, 133, 31, 78, 219, 32, 44, 23, 37, 185, 210, 228, 234, 149, 86, 186, 44, 4, 205, 181, 65, 207, 149, 80, 188, 134, 32, 225, 199, 46, 46, 223 }, new byte[] { 253, 54, 164, 153, 131, 66, 99, 115, 249, 8, 107, 245, 45, 121, 241, 143, 122, 136, 231, 3, 248, 17, 1, 60, 60, 207, 184, 165, 154, 175, 129, 199, 248, 115, 213, 44, 93, 197, 123, 154, 161, 182, 18, 222, 224, 253, 147, 68, 6, 139, 35, 135, 97, 39, 247, 105, 24, 242, 140, 211, 67, 181, 159, 127, 217, 13, 238, 201, 68, 146, 47, 64, 66, 165, 152, 1, 70, 113, 184, 62, 200, 218, 172, 4, 12, 221, 75, 67, 91, 94, 49, 95, 26, 27, 87, 243, 195, 179, 57, 88, 115, 125, 81, 206, 75, 169, 203, 40, 132, 245, 25, 146, 251, 85, 145, 112, 235, 60, 212, 97, 38, 192, 130, 237, 63, 238, 53, 108 }, false });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 7,
                columns: new[] { "DateCreated", "PasswordHash", "PasswordSalt", "isSuper" },
                values: new object[] { new DateTime(2023, 5, 23, 20, 2, 11, 240, DateTimeKind.Local).AddTicks(3711), new byte[] { 166, 112, 66, 244, 176, 51, 98, 253, 51, 231, 22, 235, 32, 28, 191, 115, 238, 111, 114, 151, 26, 172, 76, 244, 81, 48, 2, 150, 159, 246, 236, 97, 129, 133, 31, 78, 219, 32, 44, 23, 37, 185, 210, 228, 234, 149, 86, 186, 44, 4, 205, 181, 65, 207, 149, 80, 188, 134, 32, 225, 199, 46, 46, 223 }, new byte[] { 253, 54, 164, 153, 131, 66, 99, 115, 249, 8, 107, 245, 45, 121, 241, 143, 122, 136, 231, 3, 248, 17, 1, 60, 60, 207, 184, 165, 154, 175, 129, 199, 248, 115, 213, 44, 93, 197, 123, 154, 161, 182, 18, 222, 224, 253, 147, 68, 6, 139, 35, 135, 97, 39, 247, 105, 24, 242, 140, 211, 67, 181, 159, 127, 217, 13, 238, 201, 68, 146, 47, 64, 66, 165, 152, 1, 70, 113, 184, 62, 200, 218, 172, 4, 12, 221, 75, 67, 91, 94, 49, 95, 26, 27, 87, 243, 195, 179, 57, 88, 115, 125, 81, 206, 75, 169, 203, 40, 132, 245, 25, 146, 251, 85, 145, 112, 235, 60, 212, 97, 38, 192, 130, 237, 63, 238, 53, 108 }, false });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 8,
                columns: new[] { "DateCreated", "PasswordHash", "PasswordSalt", "isSuper" },
                values: new object[] { new DateTime(2023, 5, 23, 20, 2, 11, 240, DateTimeKind.Local).AddTicks(3712), new byte[] { 166, 112, 66, 244, 176, 51, 98, 253, 51, 231, 22, 235, 32, 28, 191, 115, 238, 111, 114, 151, 26, 172, 76, 244, 81, 48, 2, 150, 159, 246, 236, 97, 129, 133, 31, 78, 219, 32, 44, 23, 37, 185, 210, 228, 234, 149, 86, 186, 44, 4, 205, 181, 65, 207, 149, 80, 188, 134, 32, 225, 199, 46, 46, 223 }, new byte[] { 253, 54, 164, 153, 131, 66, 99, 115, 249, 8, 107, 245, 45, 121, 241, 143, 122, 136, 231, 3, 248, 17, 1, 60, 60, 207, 184, 165, 154, 175, 129, 199, 248, 115, 213, 44, 93, 197, 123, 154, 161, 182, 18, 222, 224, 253, 147, 68, 6, 139, 35, 135, 97, 39, 247, 105, 24, 242, 140, 211, 67, 181, 159, 127, 217, 13, 238, 201, 68, 146, 47, 64, 66, 165, 152, 1, 70, 113, 184, 62, 200, 218, 172, 4, 12, 221, 75, 67, 91, 94, 49, 95, 26, 27, 87, 243, 195, 179, 57, 88, 115, 125, 81, 206, 75, 169, 203, 40, 132, 245, 25, 146, 251, 85, 145, 112, 235, 60, 212, 97, 38, 192, 130, 237, 63, 238, 53, 108 }, false });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 9,
                columns: new[] { "DateCreated", "PasswordHash", "PasswordSalt", "isSuper" },
                values: new object[] { new DateTime(2023, 5, 23, 20, 2, 11, 240, DateTimeKind.Local).AddTicks(3714), new byte[] { 166, 112, 66, 244, 176, 51, 98, 253, 51, 231, 22, 235, 32, 28, 191, 115, 238, 111, 114, 151, 26, 172, 76, 244, 81, 48, 2, 150, 159, 246, 236, 97, 129, 133, 31, 78, 219, 32, 44, 23, 37, 185, 210, 228, 234, 149, 86, 186, 44, 4, 205, 181, 65, 207, 149, 80, 188, 134, 32, 225, 199, 46, 46, 223 }, new byte[] { 253, 54, 164, 153, 131, 66, 99, 115, 249, 8, 107, 245, 45, 121, 241, 143, 122, 136, 231, 3, 248, 17, 1, 60, 60, 207, 184, 165, 154, 175, 129, 199, 248, 115, 213, 44, 93, 197, 123, 154, 161, 182, 18, 222, 224, 253, 147, 68, 6, 139, 35, 135, 97, 39, 247, 105, 24, 242, 140, 211, 67, 181, 159, 127, 217, 13, 238, 201, 68, 146, 47, 64, 66, 165, 152, 1, 70, 113, 184, 62, 200, 218, 172, 4, 12, 221, 75, 67, 91, 94, 49, 95, 26, 27, 87, 243, 195, 179, 57, 88, 115, 125, 81, 206, 75, 169, 203, 40, 132, 245, 25, 146, 251, 85, 145, 112, 235, 60, 212, 97, 38, 192, 130, 237, 63, 238, 53, 108 }, false });
        }
    }
}
