using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

#pragma warning disable CA1814 // Prefer jagged arrays over multidimensional

namespace SkillSystem.Server.Migrations
{
    /// <inheritdoc />
    public partial class addSkillLicense : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.AddColumn<bool>(
                name: "isFinished",
                table: "TrainingItems",
                type: "bit",
                nullable: false,
                defaultValue: false);

            migrationBuilder.AddColumn<bool>(
                name: "isPass",
                table: "TrainingItems",
                type: "bit",
                nullable: false,
                defaultValue: false);

            migrationBuilder.CreateTable(
                name: "SkillLicenses",
                columns: table => new
                {
                    SkillId = table.Column<int>(type: "int", nullable: false),
                    UserId = table.Column<int>(type: "int", nullable: false),
                    SkillTypeId = table.Column<int>(type: "int", nullable: false),
                    GetTime = table.Column<DateTime>(type: "datetime2", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SkillLicenses", x => new { x.UserId, x.SkillId });
                    table.ForeignKey(
                        name: "FK_SkillLicenses_SkillTypes_SkillTypeId",
                        column: x => x.SkillTypeId,
                        principalTable: "SkillTypes",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_SkillLicenses_Skill_SkillId",
                        column: x => x.SkillId,
                        principalTable: "Skill",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_SkillLicenses_Users_UserId",
                        column: x => x.UserId,
                        principalTable: "Users",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.InsertData(
                table: "SkillLicenses",
                columns: new[] { "SkillId", "UserId", "GetTime", "SkillTypeId" },
                values: new object[,]
                {
                    { 2, 9, new DateTime(2023, 5, 23, 20, 2, 11, 240, DateTimeKind.Local).AddTicks(3361), 4 },
                    { 3, 9, new DateTime(2023, 5, 23, 20, 2, 11, 240, DateTimeKind.Local).AddTicks(3368), 4 }
                });

            migrationBuilder.UpdateData(
                table: "Training",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "EndTime", "StartTime" },
                values: new object[] { new DateTime(2023, 6, 29, 20, 2, 11, 240, DateTimeKind.Local).AddTicks(3467), new DateTime(2023, 5, 30, 20, 2, 11, 240, DateTimeKind.Local).AddTicks(3459) });

            migrationBuilder.UpdateData(
                table: "Training",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "EndTime", "StartTime" },
                values: new object[] { new DateTime(2023, 11, 23, 20, 2, 11, 240, DateTimeKind.Local).AddTicks(3470), new DateTime(2023, 8, 23, 20, 2, 11, 240, DateTimeKind.Local).AddTicks(3469) });

            migrationBuilder.UpdateData(
                table: "Training",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "EndTime", "StartTime" },
                values: new object[] { new DateTime(2023, 10, 23, 20, 2, 11, 240, DateTimeKind.Local).AddTicks(3473), new DateTime(2023, 7, 23, 20, 2, 11, 240, DateTimeKind.Local).AddTicks(3472) });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "DateCreated", "PasswordHash", "PasswordSalt" },
                values: new object[] { new DateTime(2023, 5, 23, 20, 2, 11, 240, DateTimeKind.Local).AddTicks(3700), new byte[] { 166, 112, 66, 244, 176, 51, 98, 253, 51, 231, 22, 235, 32, 28, 191, 115, 238, 111, 114, 151, 26, 172, 76, 244, 81, 48, 2, 150, 159, 246, 236, 97, 129, 133, 31, 78, 219, 32, 44, 23, 37, 185, 210, 228, 234, 149, 86, 186, 44, 4, 205, 181, 65, 207, 149, 80, 188, 134, 32, 225, 199, 46, 46, 223 }, new byte[] { 253, 54, 164, 153, 131, 66, 99, 115, 249, 8, 107, 245, 45, 121, 241, 143, 122, 136, 231, 3, 248, 17, 1, 60, 60, 207, 184, 165, 154, 175, 129, 199, 248, 115, 213, 44, 93, 197, 123, 154, 161, 182, 18, 222, 224, 253, 147, 68, 6, 139, 35, 135, 97, 39, 247, 105, 24, 242, 140, 211, 67, 181, 159, 127, 217, 13, 238, 201, 68, 146, 47, 64, 66, 165, 152, 1, 70, 113, 184, 62, 200, 218, 172, 4, 12, 221, 75, 67, 91, 94, 49, 95, 26, 27, 87, 243, 195, 179, 57, 88, 115, 125, 81, 206, 75, 169, 203, 40, 132, 245, 25, 146, 251, 85, 145, 112, 235, 60, 212, 97, 38, 192, 130, 237, 63, 238, 53, 108 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "DateCreated", "PasswordHash", "PasswordSalt" },
                values: new object[] { new DateTime(2023, 5, 23, 20, 2, 11, 240, DateTimeKind.Local).AddTicks(3703), new byte[] { 166, 112, 66, 244, 176, 51, 98, 253, 51, 231, 22, 235, 32, 28, 191, 115, 238, 111, 114, 151, 26, 172, 76, 244, 81, 48, 2, 150, 159, 246, 236, 97, 129, 133, 31, 78, 219, 32, 44, 23, 37, 185, 210, 228, 234, 149, 86, 186, 44, 4, 205, 181, 65, 207, 149, 80, 188, 134, 32, 225, 199, 46, 46, 223 }, new byte[] { 253, 54, 164, 153, 131, 66, 99, 115, 249, 8, 107, 245, 45, 121, 241, 143, 122, 136, 231, 3, 248, 17, 1, 60, 60, 207, 184, 165, 154, 175, 129, 199, 248, 115, 213, 44, 93, 197, 123, 154, 161, 182, 18, 222, 224, 253, 147, 68, 6, 139, 35, 135, 97, 39, 247, 105, 24, 242, 140, 211, 67, 181, 159, 127, 217, 13, 238, 201, 68, 146, 47, 64, 66, 165, 152, 1, 70, 113, 184, 62, 200, 218, 172, 4, 12, 221, 75, 67, 91, 94, 49, 95, 26, 27, 87, 243, 195, 179, 57, 88, 115, 125, 81, 206, 75, 169, 203, 40, 132, 245, 25, 146, 251, 85, 145, 112, 235, 60, 212, 97, 38, 192, 130, 237, 63, 238, 53, 108 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "DateCreated", "PasswordHash", "PasswordSalt" },
                values: new object[] { new DateTime(2023, 5, 23, 20, 2, 11, 240, DateTimeKind.Local).AddTicks(3705), new byte[] { 166, 112, 66, 244, 176, 51, 98, 253, 51, 231, 22, 235, 32, 28, 191, 115, 238, 111, 114, 151, 26, 172, 76, 244, 81, 48, 2, 150, 159, 246, 236, 97, 129, 133, 31, 78, 219, 32, 44, 23, 37, 185, 210, 228, 234, 149, 86, 186, 44, 4, 205, 181, 65, 207, 149, 80, 188, 134, 32, 225, 199, 46, 46, 223 }, new byte[] { 253, 54, 164, 153, 131, 66, 99, 115, 249, 8, 107, 245, 45, 121, 241, 143, 122, 136, 231, 3, 248, 17, 1, 60, 60, 207, 184, 165, 154, 175, 129, 199, 248, 115, 213, 44, 93, 197, 123, 154, 161, 182, 18, 222, 224, 253, 147, 68, 6, 139, 35, 135, 97, 39, 247, 105, 24, 242, 140, 211, 67, 181, 159, 127, 217, 13, 238, 201, 68, 146, 47, 64, 66, 165, 152, 1, 70, 113, 184, 62, 200, 218, 172, 4, 12, 221, 75, 67, 91, 94, 49, 95, 26, 27, 87, 243, 195, 179, 57, 88, 115, 125, 81, 206, 75, 169, 203, 40, 132, 245, 25, 146, 251, 85, 145, 112, 235, 60, 212, 97, 38, 192, 130, 237, 63, 238, 53, 108 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "DateCreated", "PasswordHash", "PasswordSalt" },
                values: new object[] { new DateTime(2023, 5, 23, 20, 2, 11, 240, DateTimeKind.Local).AddTicks(3707), new byte[] { 166, 112, 66, 244, 176, 51, 98, 253, 51, 231, 22, 235, 32, 28, 191, 115, 238, 111, 114, 151, 26, 172, 76, 244, 81, 48, 2, 150, 159, 246, 236, 97, 129, 133, 31, 78, 219, 32, 44, 23, 37, 185, 210, 228, 234, 149, 86, 186, 44, 4, 205, 181, 65, 207, 149, 80, 188, 134, 32, 225, 199, 46, 46, 223 }, new byte[] { 253, 54, 164, 153, 131, 66, 99, 115, 249, 8, 107, 245, 45, 121, 241, 143, 122, 136, 231, 3, 248, 17, 1, 60, 60, 207, 184, 165, 154, 175, 129, 199, 248, 115, 213, 44, 93, 197, 123, 154, 161, 182, 18, 222, 224, 253, 147, 68, 6, 139, 35, 135, 97, 39, 247, 105, 24, 242, 140, 211, 67, 181, 159, 127, 217, 13, 238, 201, 68, 146, 47, 64, 66, 165, 152, 1, 70, 113, 184, 62, 200, 218, 172, 4, 12, 221, 75, 67, 91, 94, 49, 95, 26, 27, 87, 243, 195, 179, 57, 88, 115, 125, 81, 206, 75, 169, 203, 40, 132, 245, 25, 146, 251, 85, 145, 112, 235, 60, 212, 97, 38, 192, 130, 237, 63, 238, 53, 108 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 5,
                columns: new[] { "DateCreated", "PasswordHash", "PasswordSalt" },
                values: new object[] { new DateTime(2023, 5, 23, 20, 2, 11, 240, DateTimeKind.Local).AddTicks(3708), new byte[] { 166, 112, 66, 244, 176, 51, 98, 253, 51, 231, 22, 235, 32, 28, 191, 115, 238, 111, 114, 151, 26, 172, 76, 244, 81, 48, 2, 150, 159, 246, 236, 97, 129, 133, 31, 78, 219, 32, 44, 23, 37, 185, 210, 228, 234, 149, 86, 186, 44, 4, 205, 181, 65, 207, 149, 80, 188, 134, 32, 225, 199, 46, 46, 223 }, new byte[] { 253, 54, 164, 153, 131, 66, 99, 115, 249, 8, 107, 245, 45, 121, 241, 143, 122, 136, 231, 3, 248, 17, 1, 60, 60, 207, 184, 165, 154, 175, 129, 199, 248, 115, 213, 44, 93, 197, 123, 154, 161, 182, 18, 222, 224, 253, 147, 68, 6, 139, 35, 135, 97, 39, 247, 105, 24, 242, 140, 211, 67, 181, 159, 127, 217, 13, 238, 201, 68, 146, 47, 64, 66, 165, 152, 1, 70, 113, 184, 62, 200, 218, 172, 4, 12, 221, 75, 67, 91, 94, 49, 95, 26, 27, 87, 243, 195, 179, 57, 88, 115, 125, 81, 206, 75, 169, 203, 40, 132, 245, 25, 146, 251, 85, 145, 112, 235, 60, 212, 97, 38, 192, 130, 237, 63, 238, 53, 108 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 6,
                columns: new[] { "DateCreated", "PasswordHash", "PasswordSalt" },
                values: new object[] { new DateTime(2023, 5, 23, 20, 2, 11, 240, DateTimeKind.Local).AddTicks(3709), new byte[] { 166, 112, 66, 244, 176, 51, 98, 253, 51, 231, 22, 235, 32, 28, 191, 115, 238, 111, 114, 151, 26, 172, 76, 244, 81, 48, 2, 150, 159, 246, 236, 97, 129, 133, 31, 78, 219, 32, 44, 23, 37, 185, 210, 228, 234, 149, 86, 186, 44, 4, 205, 181, 65, 207, 149, 80, 188, 134, 32, 225, 199, 46, 46, 223 }, new byte[] { 253, 54, 164, 153, 131, 66, 99, 115, 249, 8, 107, 245, 45, 121, 241, 143, 122, 136, 231, 3, 248, 17, 1, 60, 60, 207, 184, 165, 154, 175, 129, 199, 248, 115, 213, 44, 93, 197, 123, 154, 161, 182, 18, 222, 224, 253, 147, 68, 6, 139, 35, 135, 97, 39, 247, 105, 24, 242, 140, 211, 67, 181, 159, 127, 217, 13, 238, 201, 68, 146, 47, 64, 66, 165, 152, 1, 70, 113, 184, 62, 200, 218, 172, 4, 12, 221, 75, 67, 91, 94, 49, 95, 26, 27, 87, 243, 195, 179, 57, 88, 115, 125, 81, 206, 75, 169, 203, 40, 132, 245, 25, 146, 251, 85, 145, 112, 235, 60, 212, 97, 38, 192, 130, 237, 63, 238, 53, 108 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 7,
                columns: new[] { "DateCreated", "PasswordHash", "PasswordSalt" },
                values: new object[] { new DateTime(2023, 5, 23, 20, 2, 11, 240, DateTimeKind.Local).AddTicks(3711), new byte[] { 166, 112, 66, 244, 176, 51, 98, 253, 51, 231, 22, 235, 32, 28, 191, 115, 238, 111, 114, 151, 26, 172, 76, 244, 81, 48, 2, 150, 159, 246, 236, 97, 129, 133, 31, 78, 219, 32, 44, 23, 37, 185, 210, 228, 234, 149, 86, 186, 44, 4, 205, 181, 65, 207, 149, 80, 188, 134, 32, 225, 199, 46, 46, 223 }, new byte[] { 253, 54, 164, 153, 131, 66, 99, 115, 249, 8, 107, 245, 45, 121, 241, 143, 122, 136, 231, 3, 248, 17, 1, 60, 60, 207, 184, 165, 154, 175, 129, 199, 248, 115, 213, 44, 93, 197, 123, 154, 161, 182, 18, 222, 224, 253, 147, 68, 6, 139, 35, 135, 97, 39, 247, 105, 24, 242, 140, 211, 67, 181, 159, 127, 217, 13, 238, 201, 68, 146, 47, 64, 66, 165, 152, 1, 70, 113, 184, 62, 200, 218, 172, 4, 12, 221, 75, 67, 91, 94, 49, 95, 26, 27, 87, 243, 195, 179, 57, 88, 115, 125, 81, 206, 75, 169, 203, 40, 132, 245, 25, 146, 251, 85, 145, 112, 235, 60, 212, 97, 38, 192, 130, 237, 63, 238, 53, 108 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 8,
                columns: new[] { "DateCreated", "PasswordHash", "PasswordSalt" },
                values: new object[] { new DateTime(2023, 5, 23, 20, 2, 11, 240, DateTimeKind.Local).AddTicks(3712), new byte[] { 166, 112, 66, 244, 176, 51, 98, 253, 51, 231, 22, 235, 32, 28, 191, 115, 238, 111, 114, 151, 26, 172, 76, 244, 81, 48, 2, 150, 159, 246, 236, 97, 129, 133, 31, 78, 219, 32, 44, 23, 37, 185, 210, 228, 234, 149, 86, 186, 44, 4, 205, 181, 65, 207, 149, 80, 188, 134, 32, 225, 199, 46, 46, 223 }, new byte[] { 253, 54, 164, 153, 131, 66, 99, 115, 249, 8, 107, 245, 45, 121, 241, 143, 122, 136, 231, 3, 248, 17, 1, 60, 60, 207, 184, 165, 154, 175, 129, 199, 248, 115, 213, 44, 93, 197, 123, 154, 161, 182, 18, 222, 224, 253, 147, 68, 6, 139, 35, 135, 97, 39, 247, 105, 24, 242, 140, 211, 67, 181, 159, 127, 217, 13, 238, 201, 68, 146, 47, 64, 66, 165, 152, 1, 70, 113, 184, 62, 200, 218, 172, 4, 12, 221, 75, 67, 91, 94, 49, 95, 26, 27, 87, 243, 195, 179, 57, 88, 115, 125, 81, 206, 75, 169, 203, 40, 132, 245, 25, 146, 251, 85, 145, 112, 235, 60, 212, 97, 38, 192, 130, 237, 63, 238, 53, 108 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 9,
                columns: new[] { "DateCreated", "PasswordHash", "PasswordSalt" },
                values: new object[] { new DateTime(2023, 5, 23, 20, 2, 11, 240, DateTimeKind.Local).AddTicks(3714), new byte[] { 166, 112, 66, 244, 176, 51, 98, 253, 51, 231, 22, 235, 32, 28, 191, 115, 238, 111, 114, 151, 26, 172, 76, 244, 81, 48, 2, 150, 159, 246, 236, 97, 129, 133, 31, 78, 219, 32, 44, 23, 37, 185, 210, 228, 234, 149, 86, 186, 44, 4, 205, 181, 65, 207, 149, 80, 188, 134, 32, 225, 199, 46, 46, 223 }, new byte[] { 253, 54, 164, 153, 131, 66, 99, 115, 249, 8, 107, 245, 45, 121, 241, 143, 122, 136, 231, 3, 248, 17, 1, 60, 60, 207, 184, 165, 154, 175, 129, 199, 248, 115, 213, 44, 93, 197, 123, 154, 161, 182, 18, 222, 224, 253, 147, 68, 6, 139, 35, 135, 97, 39, 247, 105, 24, 242, 140, 211, 67, 181, 159, 127, 217, 13, 238, 201, 68, 146, 47, 64, 66, 165, 152, 1, 70, 113, 184, 62, 200, 218, 172, 4, 12, 221, 75, 67, 91, 94, 49, 95, 26, 27, 87, 243, 195, 179, 57, 88, 115, 125, 81, 206, 75, 169, 203, 40, 132, 245, 25, 146, 251, 85, 145, 112, 235, 60, 212, 97, 38, 192, 130, 237, 63, 238, 53, 108 } });

            migrationBuilder.CreateIndex(
                name: "IX_SkillLicenses_SkillId",
                table: "SkillLicenses",
                column: "SkillId");

            migrationBuilder.CreateIndex(
                name: "IX_SkillLicenses_SkillTypeId",
                table: "SkillLicenses",
                column: "SkillTypeId");
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "SkillLicenses");

            migrationBuilder.DropColumn(
                name: "isFinished",
                table: "TrainingItems");

            migrationBuilder.DropColumn(
                name: "isPass",
                table: "TrainingItems");

            migrationBuilder.UpdateData(
                table: "Training",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "EndTime", "StartTime" },
                values: new object[] { new DateTime(2023, 6, 27, 19, 40, 3, 488, DateTimeKind.Local).AddTicks(848), new DateTime(2023, 5, 28, 19, 40, 3, 488, DateTimeKind.Local).AddTicks(838) });

            migrationBuilder.UpdateData(
                table: "Training",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "EndTime", "StartTime" },
                values: new object[] { new DateTime(2023, 11, 21, 19, 40, 3, 488, DateTimeKind.Local).AddTicks(852), new DateTime(2023, 8, 21, 19, 40, 3, 488, DateTimeKind.Local).AddTicks(850) });

            migrationBuilder.UpdateData(
                table: "Training",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "EndTime", "StartTime" },
                values: new object[] { new DateTime(2023, 10, 21, 19, 40, 3, 488, DateTimeKind.Local).AddTicks(854), new DateTime(2023, 7, 21, 19, 40, 3, 488, DateTimeKind.Local).AddTicks(854) });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "DateCreated", "PasswordHash", "PasswordSalt" },
                values: new object[] { new DateTime(2023, 5, 21, 19, 40, 3, 488, DateTimeKind.Local).AddTicks(1071), new byte[] { 193, 126, 114, 212, 29, 138, 149, 19, 191, 218, 90, 30, 54, 169, 57, 56, 14, 24, 98, 131, 129, 250, 145, 44, 135, 115, 117, 239, 24, 180, 208, 105, 36, 4, 135, 49, 124, 227, 161, 42, 151, 15, 48, 6, 17, 76, 169, 194, 228, 180, 34, 39, 100, 244, 128, 239, 195, 162, 7, 14, 98, 81, 38, 195 }, new byte[] { 54, 42, 28, 151, 37, 146, 91, 51, 52, 216, 65, 141, 157, 16, 63, 164, 10, 213, 32, 82, 168, 168, 188, 117, 63, 68, 166, 138, 134, 83, 201, 176, 84, 14, 185, 154, 48, 61, 170, 219, 139, 95, 44, 158, 40, 51, 18, 152, 163, 166, 46, 43, 59, 7, 207, 128, 153, 115, 233, 192, 103, 151, 41, 169, 170, 237, 79, 230, 77, 3, 27, 44, 161, 98, 177, 202, 107, 104, 127, 29, 103, 164, 248, 5, 2, 84, 249, 231, 218, 218, 144, 213, 104, 228, 30, 32, 21, 68, 54, 55, 74, 150, 197, 44, 70, 255, 45, 249, 115, 154, 83, 177, 34, 34, 122, 191, 2, 101, 171, 106, 92, 158, 236, 162, 225, 6, 210, 241 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "DateCreated", "PasswordHash", "PasswordSalt" },
                values: new object[] { new DateTime(2023, 5, 21, 19, 40, 3, 488, DateTimeKind.Local).AddTicks(1073), new byte[] { 193, 126, 114, 212, 29, 138, 149, 19, 191, 218, 90, 30, 54, 169, 57, 56, 14, 24, 98, 131, 129, 250, 145, 44, 135, 115, 117, 239, 24, 180, 208, 105, 36, 4, 135, 49, 124, 227, 161, 42, 151, 15, 48, 6, 17, 76, 169, 194, 228, 180, 34, 39, 100, 244, 128, 239, 195, 162, 7, 14, 98, 81, 38, 195 }, new byte[] { 54, 42, 28, 151, 37, 146, 91, 51, 52, 216, 65, 141, 157, 16, 63, 164, 10, 213, 32, 82, 168, 168, 188, 117, 63, 68, 166, 138, 134, 83, 201, 176, 84, 14, 185, 154, 48, 61, 170, 219, 139, 95, 44, 158, 40, 51, 18, 152, 163, 166, 46, 43, 59, 7, 207, 128, 153, 115, 233, 192, 103, 151, 41, 169, 170, 237, 79, 230, 77, 3, 27, 44, 161, 98, 177, 202, 107, 104, 127, 29, 103, 164, 248, 5, 2, 84, 249, 231, 218, 218, 144, 213, 104, 228, 30, 32, 21, 68, 54, 55, 74, 150, 197, 44, 70, 255, 45, 249, 115, 154, 83, 177, 34, 34, 122, 191, 2, 101, 171, 106, 92, 158, 236, 162, 225, 6, 210, 241 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "DateCreated", "PasswordHash", "PasswordSalt" },
                values: new object[] { new DateTime(2023, 5, 21, 19, 40, 3, 488, DateTimeKind.Local).AddTicks(1106), new byte[] { 193, 126, 114, 212, 29, 138, 149, 19, 191, 218, 90, 30, 54, 169, 57, 56, 14, 24, 98, 131, 129, 250, 145, 44, 135, 115, 117, 239, 24, 180, 208, 105, 36, 4, 135, 49, 124, 227, 161, 42, 151, 15, 48, 6, 17, 76, 169, 194, 228, 180, 34, 39, 100, 244, 128, 239, 195, 162, 7, 14, 98, 81, 38, 195 }, new byte[] { 54, 42, 28, 151, 37, 146, 91, 51, 52, 216, 65, 141, 157, 16, 63, 164, 10, 213, 32, 82, 168, 168, 188, 117, 63, 68, 166, 138, 134, 83, 201, 176, 84, 14, 185, 154, 48, 61, 170, 219, 139, 95, 44, 158, 40, 51, 18, 152, 163, 166, 46, 43, 59, 7, 207, 128, 153, 115, 233, 192, 103, 151, 41, 169, 170, 237, 79, 230, 77, 3, 27, 44, 161, 98, 177, 202, 107, 104, 127, 29, 103, 164, 248, 5, 2, 84, 249, 231, 218, 218, 144, 213, 104, 228, 30, 32, 21, 68, 54, 55, 74, 150, 197, 44, 70, 255, 45, 249, 115, 154, 83, 177, 34, 34, 122, 191, 2, 101, 171, 106, 92, 158, 236, 162, 225, 6, 210, 241 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "DateCreated", "PasswordHash", "PasswordSalt" },
                values: new object[] { new DateTime(2023, 5, 21, 19, 40, 3, 488, DateTimeKind.Local).AddTicks(1107), new byte[] { 193, 126, 114, 212, 29, 138, 149, 19, 191, 218, 90, 30, 54, 169, 57, 56, 14, 24, 98, 131, 129, 250, 145, 44, 135, 115, 117, 239, 24, 180, 208, 105, 36, 4, 135, 49, 124, 227, 161, 42, 151, 15, 48, 6, 17, 76, 169, 194, 228, 180, 34, 39, 100, 244, 128, 239, 195, 162, 7, 14, 98, 81, 38, 195 }, new byte[] { 54, 42, 28, 151, 37, 146, 91, 51, 52, 216, 65, 141, 157, 16, 63, 164, 10, 213, 32, 82, 168, 168, 188, 117, 63, 68, 166, 138, 134, 83, 201, 176, 84, 14, 185, 154, 48, 61, 170, 219, 139, 95, 44, 158, 40, 51, 18, 152, 163, 166, 46, 43, 59, 7, 207, 128, 153, 115, 233, 192, 103, 151, 41, 169, 170, 237, 79, 230, 77, 3, 27, 44, 161, 98, 177, 202, 107, 104, 127, 29, 103, 164, 248, 5, 2, 84, 249, 231, 218, 218, 144, 213, 104, 228, 30, 32, 21, 68, 54, 55, 74, 150, 197, 44, 70, 255, 45, 249, 115, 154, 83, 177, 34, 34, 122, 191, 2, 101, 171, 106, 92, 158, 236, 162, 225, 6, 210, 241 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 5,
                columns: new[] { "DateCreated", "PasswordHash", "PasswordSalt" },
                values: new object[] { new DateTime(2023, 5, 21, 19, 40, 3, 488, DateTimeKind.Local).AddTicks(1109), new byte[] { 193, 126, 114, 212, 29, 138, 149, 19, 191, 218, 90, 30, 54, 169, 57, 56, 14, 24, 98, 131, 129, 250, 145, 44, 135, 115, 117, 239, 24, 180, 208, 105, 36, 4, 135, 49, 124, 227, 161, 42, 151, 15, 48, 6, 17, 76, 169, 194, 228, 180, 34, 39, 100, 244, 128, 239, 195, 162, 7, 14, 98, 81, 38, 195 }, new byte[] { 54, 42, 28, 151, 37, 146, 91, 51, 52, 216, 65, 141, 157, 16, 63, 164, 10, 213, 32, 82, 168, 168, 188, 117, 63, 68, 166, 138, 134, 83, 201, 176, 84, 14, 185, 154, 48, 61, 170, 219, 139, 95, 44, 158, 40, 51, 18, 152, 163, 166, 46, 43, 59, 7, 207, 128, 153, 115, 233, 192, 103, 151, 41, 169, 170, 237, 79, 230, 77, 3, 27, 44, 161, 98, 177, 202, 107, 104, 127, 29, 103, 164, 248, 5, 2, 84, 249, 231, 218, 218, 144, 213, 104, 228, 30, 32, 21, 68, 54, 55, 74, 150, 197, 44, 70, 255, 45, 249, 115, 154, 83, 177, 34, 34, 122, 191, 2, 101, 171, 106, 92, 158, 236, 162, 225, 6, 210, 241 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 6,
                columns: new[] { "DateCreated", "PasswordHash", "PasswordSalt" },
                values: new object[] { new DateTime(2023, 5, 21, 19, 40, 3, 488, DateTimeKind.Local).AddTicks(1110), new byte[] { 193, 126, 114, 212, 29, 138, 149, 19, 191, 218, 90, 30, 54, 169, 57, 56, 14, 24, 98, 131, 129, 250, 145, 44, 135, 115, 117, 239, 24, 180, 208, 105, 36, 4, 135, 49, 124, 227, 161, 42, 151, 15, 48, 6, 17, 76, 169, 194, 228, 180, 34, 39, 100, 244, 128, 239, 195, 162, 7, 14, 98, 81, 38, 195 }, new byte[] { 54, 42, 28, 151, 37, 146, 91, 51, 52, 216, 65, 141, 157, 16, 63, 164, 10, 213, 32, 82, 168, 168, 188, 117, 63, 68, 166, 138, 134, 83, 201, 176, 84, 14, 185, 154, 48, 61, 170, 219, 139, 95, 44, 158, 40, 51, 18, 152, 163, 166, 46, 43, 59, 7, 207, 128, 153, 115, 233, 192, 103, 151, 41, 169, 170, 237, 79, 230, 77, 3, 27, 44, 161, 98, 177, 202, 107, 104, 127, 29, 103, 164, 248, 5, 2, 84, 249, 231, 218, 218, 144, 213, 104, 228, 30, 32, 21, 68, 54, 55, 74, 150, 197, 44, 70, 255, 45, 249, 115, 154, 83, 177, 34, 34, 122, 191, 2, 101, 171, 106, 92, 158, 236, 162, 225, 6, 210, 241 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 7,
                columns: new[] { "DateCreated", "PasswordHash", "PasswordSalt" },
                values: new object[] { new DateTime(2023, 5, 21, 19, 40, 3, 488, DateTimeKind.Local).AddTicks(1112), new byte[] { 193, 126, 114, 212, 29, 138, 149, 19, 191, 218, 90, 30, 54, 169, 57, 56, 14, 24, 98, 131, 129, 250, 145, 44, 135, 115, 117, 239, 24, 180, 208, 105, 36, 4, 135, 49, 124, 227, 161, 42, 151, 15, 48, 6, 17, 76, 169, 194, 228, 180, 34, 39, 100, 244, 128, 239, 195, 162, 7, 14, 98, 81, 38, 195 }, new byte[] { 54, 42, 28, 151, 37, 146, 91, 51, 52, 216, 65, 141, 157, 16, 63, 164, 10, 213, 32, 82, 168, 168, 188, 117, 63, 68, 166, 138, 134, 83, 201, 176, 84, 14, 185, 154, 48, 61, 170, 219, 139, 95, 44, 158, 40, 51, 18, 152, 163, 166, 46, 43, 59, 7, 207, 128, 153, 115, 233, 192, 103, 151, 41, 169, 170, 237, 79, 230, 77, 3, 27, 44, 161, 98, 177, 202, 107, 104, 127, 29, 103, 164, 248, 5, 2, 84, 249, 231, 218, 218, 144, 213, 104, 228, 30, 32, 21, 68, 54, 55, 74, 150, 197, 44, 70, 255, 45, 249, 115, 154, 83, 177, 34, 34, 122, 191, 2, 101, 171, 106, 92, 158, 236, 162, 225, 6, 210, 241 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 8,
                columns: new[] { "DateCreated", "PasswordHash", "PasswordSalt" },
                values: new object[] { new DateTime(2023, 5, 21, 19, 40, 3, 488, DateTimeKind.Local).AddTicks(1113), new byte[] { 193, 126, 114, 212, 29, 138, 149, 19, 191, 218, 90, 30, 54, 169, 57, 56, 14, 24, 98, 131, 129, 250, 145, 44, 135, 115, 117, 239, 24, 180, 208, 105, 36, 4, 135, 49, 124, 227, 161, 42, 151, 15, 48, 6, 17, 76, 169, 194, 228, 180, 34, 39, 100, 244, 128, 239, 195, 162, 7, 14, 98, 81, 38, 195 }, new byte[] { 54, 42, 28, 151, 37, 146, 91, 51, 52, 216, 65, 141, 157, 16, 63, 164, 10, 213, 32, 82, 168, 168, 188, 117, 63, 68, 166, 138, 134, 83, 201, 176, 84, 14, 185, 154, 48, 61, 170, 219, 139, 95, 44, 158, 40, 51, 18, 152, 163, 166, 46, 43, 59, 7, 207, 128, 153, 115, 233, 192, 103, 151, 41, 169, 170, 237, 79, 230, 77, 3, 27, 44, 161, 98, 177, 202, 107, 104, 127, 29, 103, 164, 248, 5, 2, 84, 249, 231, 218, 218, 144, 213, 104, 228, 30, 32, 21, 68, 54, 55, 74, 150, 197, 44, 70, 255, 45, 249, 115, 154, 83, 177, 34, 34, 122, 191, 2, 101, 171, 106, 92, 158, 236, 162, 225, 6, 210, 241 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 9,
                columns: new[] { "DateCreated", "PasswordHash", "PasswordSalt" },
                values: new object[] { new DateTime(2023, 5, 21, 19, 40, 3, 488, DateTimeKind.Local).AddTicks(1115), new byte[] { 193, 126, 114, 212, 29, 138, 149, 19, 191, 218, 90, 30, 54, 169, 57, 56, 14, 24, 98, 131, 129, 250, 145, 44, 135, 115, 117, 239, 24, 180, 208, 105, 36, 4, 135, 49, 124, 227, 161, 42, 151, 15, 48, 6, 17, 76, 169, 194, 228, 180, 34, 39, 100, 244, 128, 239, 195, 162, 7, 14, 98, 81, 38, 195 }, new byte[] { 54, 42, 28, 151, 37, 146, 91, 51, 52, 216, 65, 141, 157, 16, 63, 164, 10, 213, 32, 82, 168, 168, 188, 117, 63, 68, 166, 138, 134, 83, 201, 176, 84, 14, 185, 154, 48, 61, 170, 219, 139, 95, 44, 158, 40, 51, 18, 152, 163, 166, 46, 43, 59, 7, 207, 128, 153, 115, 233, 192, 103, 151, 41, 169, 170, 237, 79, 230, 77, 3, 27, 44, 161, 98, 177, 202, 107, 104, 127, 29, 103, 164, 248, 5, 2, 84, 249, 231, 218, 218, 144, 213, 104, 228, 30, 32, 21, 68, 54, 55, 74, 150, 197, 44, 70, 255, 45, 249, 115, 154, 83, 177, 34, 34, 122, 191, 2, 101, 171, 106, 92, 158, 236, 162, 225, 6, 210, 241 } });
        }
    }
}
