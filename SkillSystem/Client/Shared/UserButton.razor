@inject ILocalStorageService LocalStorage
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<div class="dropdown">
    <button class="btn btn-primary dropdown-toggle user-button"
    @onclick="ToggleUserMenu"
    @onfocusout="HideUserMenu"
    >
    <i class="oi oi-person"></i>
    </button>
    <div class="dropdown-menu dropdown-menu-end @UserMenuCssClass">
        <AuthorizeView>
            <Authorized>
                <a href="profile" class="dropdown-item">个人信息</a>
                <AdminMenu></AdminMenu>
                <button class="dropdown-item" @onclick="Logout">注销</button>
            </Authorized>
            <NotAuthorized>
                <a href="login" class="dropdown-item">登录</a>
                <a href="register" class="dropdown-item">注册</a>
            </NotAuthorized>
        </AuthorizeView>
    </div>
</div>

@code {
    private bool showUserMenu = false;//是否显示用户菜单
    private string? UserMenuCssClass => showUserMenu ? "show-menu" : null;

    private void ToggleUserMenu()
    {
        showUserMenu = !showUserMenu;
    }

    //当丢失焦点时延迟消失用户菜单方法
    private async Task HideUserMenu()
    {
        await Task.Delay(200);
        showUserMenu = false;
    }

    //注销账号
    private async Task Logout()
    {
        await LocalStorage.RemoveItemAsync("authToken");
        await AuthenticationStateProvider.GetAuthenticationStateAsync();
        NavigationManager.NavigateTo("login");
    }
}
